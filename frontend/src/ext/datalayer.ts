export const DATALAYER_INFO_BOLTAMPERA = [
  ['battery_5V_ref', 'u16'],
  ['battery_capacity_my17_18', 'u16'],
  ['battery_capacity_my19plus', 'u16'],
  ['battery_SOC_display', 'u16'],
  ['battery_SOC_raw_highprec', 'u16'],
  ['battery_max_temperature', 'u16'],
  ['battery_min_temperature', 'u16'],
  ['battery_max_cell_voltage', 'u16'],
  ['battery_min_cell_voltage', 'u16'],
  ['battery_lowest_cell', 'u16'],
  ['battery_highest_cell', 'u16'],
  ['battery_internal_resistance', 'u16'],
  ['battery_voltage_polled', 'u16'],
  ['battery_vehicle_isolation', 'u16'],
  ['battery_isolation_kohm', 'u16'],
  ['battery_HV_locked', 'u16'],
  ['battery_crash_event', 'u16'],
  ['battery_HVIL', 'u16'],
  ['battery_HVIL_status', 'u16'],
  ['battery_cell_average_voltage', 'u16'],
  ['battery_cell_average_voltage_2', 'u16'],
  ['battery_terminal_voltage', 'u16'],
  ['battery_ignition_power_mode', 'u16'],
  ['battery_module_temp_1', 'i16'],
  ['battery_module_temp_2', 'i16'],
  ['battery_module_temp_3', 'i16'],
  ['battery_module_temp_4', 'i16'],
  ['battery_module_temp_5', 'i16'],
  ['battery_module_temp_6', 'i16'],
  ['battery_current_7E7', 'i16'],
  ['battery_current_7E4', 'i16'],
];

export const DATALAYER_INFO_BMWPHEV = [
  ['dtc_codes', 'u32', 32],
  ['dtc_status', 'u8', 32],
  ['dtc_last_read_millis', 'i32'],
  ['', ' ', 4],
  ['min_cell_voltage_data_age', 'u64'],
  ['max_cell_voltage_data_age', 'u64'],
  ['allowable_charge_amps', 'i32'],
  ['allowable_discharge_amps', 'i32'],
  ['iso_safety_int_kohm', 'i32'],
  ['iso_safety_ext_kohm', 'i32'],
  ['iso_safety_trg_kohm', 'i32'],
  ['iso_safety_ext_plausible', 'i32'],
  ['iso_safety_int_plausible', 'i32'],
  ['iso_safety_trg_plausible', 'i32'],
  ['iso_safety_kohm', 'i32'],
  ['iso_safety_kohm_quality', 'i32'],
  ['T30_Voltage', 'u16'],
  ['min_soh_state', 'u16'],
  ['max_soh_state', 'u16'],
  ['balancing_status', 'i16'],
  ['battery_voltage_after_contactor', 'i16'],
  ['ST_iso_ext', 'u8'],
  ['ST_iso_int', 'u8'],
  ['ST_valve_cooling', 'u8'],
  ['ST_interlock', 'u8'],
  ['ST_precharge', 'u8'],
  ['ST_DCSW', 'u8'],
  ['ST_EMG', 'u8'],
  ['ST_WELD', 'u8'],
  ['ST_isolation', 'u8'],
  ['ST_cold_shutoff_valve', 'u8'],
  ['hvil_status', 'u8'],
  ['battery_request_open_contactors', 'u8'],
  ['battery_request_open_contactors_instantly', 'u8'],
  ['battery_request_open_contactors_fast', 'u8'],
  ['battery_charging_condition_delta', 'u8'],
  ['battery_DC_link_voltage', 'u8'],
  ['dtc_count', 'u8'],
  ['dtc_read_in_progress', 'b'],
  ['dtc_read_failed', 'b'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestBMSReset', 'b'],
];

export const DATALAYER_INFO_BYDATTO3 = [
  ['unknown0', 'u32'],
  ['unknown1', 'u32'],
  ['SOC_estimated', 'u16'],
  ['SOC_highprec', 'u16'],
  ['SOC_polled', 'u16'],
  ['voltage_periodic', 'u16'],
  ['voltage_polled', 'u16'],
  ['chargePower', 'u16'],
  ['charge_times', 'u16'],
  ['dischargePower', 'u16'],
  ['total_charged_ah', 'u16'],
  ['total_discharged_ah', 'u16'],
  ['total_charged_kwh', 'u16'],
  ['total_discharged_kwh', 'u16'],
  ['times_full_power', 'u16'],
  ['battery_temperatures', 'i16', 10],
  ['unknown10', 'u8'],
  ['unknown11', 'u8'],
  ['unknown12', 'u8'],
  ['unknown13', 'u8'],
  ['UserRequestCrashReset', 'b'],
  ['SOC_method', 'b'],
];

export const DATALAYER_INFO_CELLPOWER = [
  ['system_state_discharge', 'b'],
  ['system_state_charge', 'b'],
  ['system_state_cellbalancing', 'b'],
  ['system_state_tricklecharge', 'b'],
  ['system_state_idle', 'b'],
  ['system_state_chargecompleted', 'b'],
  ['system_state_maintenancecharge', 'b'],
  ['IO_state_main_positive_relay', 'b'],
  ['IO_state_main_negative_relay', 'b'],
  ['IO_state_charge_enable', 'b'],
  ['IO_state_precharge_relay', 'b'],
  ['IO_state_discharge_enable', 'b'],
  ['IO_state_IO_6', 'b'],
  ['IO_state_IO_7', 'b'],
  ['IO_state_IO_8', 'b'],
  ['error_Cell_overvoltage', 'b'],
  ['error_Cell_undervoltage', 'b'],
  ['error_Cell_end_of_life_voltage', 'b'],
  ['error_Cell_voltage_misread', 'b'],
  ['error_Cell_over_temperature', 'b'],
  ['error_Cell_under_temperature', 'b'],
  ['error_Cell_unmanaged', 'b'],
  ['error_LMU_over_temperature', 'b'],
  ['error_LMU_under_temperature', 'b'],
  ['error_Temp_sensor_open_circuit', 'b'],
  ['error_Temp_sensor_short_circuit', 'b'],
  ['error_SUB_communication', 'b'],
  ['error_LMU_communication', 'b'],
  ['error_Over_current_IN', 'b'],
  ['error_Over_current_OUT', 'b'],
  ['error_Short_circuit', 'b'],
  ['error_Leak_detected', 'b'],
  ['error_Leak_detection_failed', 'b'],
  ['error_Voltage_difference', 'b'],
  ['error_BMCU_supply_over_voltage', 'b'],
  ['error_BMCU_supply_under_voltage', 'b'],
  ['error_Main_positive_contactor', 'b'],
  ['error_Main_negative_contactor', 'b'],
  ['error_Precharge_contactor', 'b'],
  ['error_Midpack_contactor', 'b'],
  ['error_Precharge_timeout', 'b'],
  ['error_Emergency_connector_override', 'b'],
  ['warning_High_cell_voltage', 'b'],
  ['warning_Low_cell_voltage', 'b'],
  ['warning_High_cell_temperature', 'b'],
  ['warning_Low_cell_temperature', 'b'],
  ['warning_High_LMU_temperature', 'b'],
  ['warning_Low_LMU_temperature', 'b'],
  ['warning_SUB_communication_interfered', 'b'],
  ['warning_LMU_communication_interfered', 'b'],
  ['warning_High_current_IN', 'b'],
  ['warning_High_current_OUT', 'b'],
  ['warning_Pack_resistance_difference', 'b'],
  ['warning_High_pack_resistance', 'b'],
  ['warning_Cell_resistance_difference', 'b'],
  ['warning_High_cell_resistance', 'b'],
  ['warning_High_BMCU_supply_voltage', 'b'],
  ['warning_Low_BMCU_supply_voltage', 'b'],
  ['warning_Low_SOC', 'b'],
  ['warning_Balancing_required_OCV_model', 'b'],
  ['warning_Charger_not_responding', 'b'],
];

export const DATALAYER_INFO_CHADEMO = [
  ['CHADEMO_Status', 'u8'],
  ['ControlProtocolNumberEV', 'u8'],
  ['UserRequestRestart', 'b'],
  ['UserRequestStop', 'b'],
  ['FaultBatteryVoltageDeviation', 'b'],
  ['FaultHighBatteryTemperature', 'b'],
  ['FaultBatteryCurrentDeviation', 'b'],
  ['FaultBatteryUnderVoltage', 'b'],
  ['FaultBatteryOverVoltage', 'b'],
];

export const DATALAYER_INFO_CMFAEV = [
  ['cumulative_energy_when_discharging', 'u64'],
  ['cumulative_energy_when_charging', 'u64'],
  ['cumulative_energy_in_regen', 'u64'],
  ['soc_z', 'u16'],
  ['soc_u', 'u16'],
  ['soh_average', 'u16'],
  ['max_regen_power', 'u16'],
  ['max_discharge_power', 'u16'],
  ['maximum_charge_power', 'u16'],
  ['SOH_available_power', 'u16'],
  ['SOH_generated_power', 'u16'],
  ['lead_acid_voltage', 'u16'],
  ['average_temperature', 'i16'],
  ['minimum_temperature', 'i16'],
  ['maximum_temperature', 'i16'],
  ['highest_cell_voltage_number', 'u8'],
  ['lowest_cell_voltage_number', 'u8'],
];

export const DATALAYER_INFO_ECMP = [
  ['pid_insulation_res_neg', 'u32'],
  ['pid_insulation_res_pos', 'u32'],
  ['pid_max_current_10s', 'u32'],
  ['pid_max_discharge_10s', 'u32'],
  ['pid_max_discharge_30s', 'u32'],
  ['pid_max_charge_10s', 'u32'],
  ['pid_max_charge_30s', 'u32'],
  ['pid_energy_capacity', 'u32'],
  ['pid_insulation_res', 'u32'],
  ['pid_crash_counter', 'u32'],
  ['pid_history_data', 'u32'],
  ['pid_lowsoc_counter', 'u32'],
  ['pid_last_can_failure_detail', 'u32'],
  ['pid_hw_version_num', 'u32'],
  ['pid_sw_version_num', 'u32'],
  ['pid_factory_mode_control', 'u32'],
  ['pid_aux_fuse_state', 'u32'],
  ['pid_battery_state', 'u32'],
  ['pid_precharge_short_circuit', 'u32'],
  ['pid_eservice_plug_state', 'u32'],
  ['pid_mainfuse_state', 'u32'],
  ['pid_most_critical_fault', 'u32'],
  ['pid_current_time', 'u32'],
  ['pid_time_sent_by_car', 'u32'],
  ['pid_12v', 'u32'],
  ['pid_12v_abnormal', 'u32'],
  ['pid_hvil_in_voltage', 'u32'],
  ['pid_hvil_out_voltage', 'u32'],
  ['pid_hvil_state', 'u32'],
  ['pid_bms_state', 'u32'],
  ['pid_vehicle_speed', 'u32'],
  ['pid_time_spent_over_55c', 'u32'],
  ['pid_contactor_closing_counter', 'u32'],
  ['pid_date_of_manufacture', 'u32'],
  ['pid_current', 'i32'],
  ['HV_BATT_FC_INSU_MINUS_RES', 'u16'],
  ['HV_BATT_FC_INSU_PLUS_RES', 'u16'],
  ['HV_BATT_FC_VHL_INSU_PLUS_RES', 'u16'],
  ['HV_BATT_ONLY_INSU_MINUS_RES', 'u16'],
  ['InsulationResistance', 'u16'],
  ['pid_avg_cell_voltage', 'u16'],
  ['pid_sum_of_cells', 'u16'],
  ['pid_cell_min_capacity', 'u16'],
  ['pid_pack_voltage', 'u16'],
  ['pid_high_cell_voltage', 'u16'],
  ['pid_low_cell_voltage', 'u16'],
  ['pid_SOH_cell_1', 'u16'],
  ['InsulationDiag', 'u8'],
  ['MainConnectorState', 'u8'],
  ['CONTACTOR_OPENING_REASON', 'u8'],
  ['TBMU_FAULT_TYPE', 'u8'],
  ['CONTACTORS_STATE', 'u8'],
  ['pid_welding_detection', 'u8'],
  ['pid_reason_open', 'u8'],
  ['pid_contactor_status', 'u8'],
  ['pid_negative_contactor_control', 'u8'],
  ['pid_negative_contactor_status', 'u8'],
  ['pid_positive_contactor_control', 'u8'],
  ['pid_positive_contactor_status', 'u8'],
  ['pid_contactor_negative', 'u8'],
  ['pid_contactor_positive', 'u8'],
  ['pid_precharge_relay_control', 'u8'],
  ['pid_precharge_relay_status', 'u8'],
  ['pid_recharge_status', 'u8'],
  ['pid_delta_temperature', 'u8'],
  ['pid_coldest_module', 'u8'],
  ['pid_lowest_temperature', 'u8'],
  ['pid_average_temperature', 'u8'],
  ['pid_highest_temperature', 'u8'],
  ['pid_hottest_module', 'u8'],
  ['MysteryVan', 'b'],
  ['CrashMemorized', 'b'],
  ['InterlockOpen', 'b'],
  ['UserRequestContactorReset', 'b'],
  ['UserRequestCollisionReset', 'b'],
  ['UserRequestIsolationReset', 'b'],
  ['UserRequestDisableIsoMonitoring', 'b'],
  ['ALERT_CELL_POOR_CONSIST', 'b'],
  ['ALERT_OVERCHARGE', 'b'],
  ['ALERT_BATT', 'b'],
  ['ALERT_LOW_SOC', 'b'],
  ['ALERT_HIGH_SOC', 'b'],
  ['ALERT_SOC_JUMP', 'b'],
  ['ALERT_TEMP_DIFF', 'b'],
  ['ALERT_HIGH_TEMP', 'b'],
  ['ALERT_OVERVOLTAGE', 'b'],
  ['ALERT_CELL_OVERVOLTAGE', 'b'],
  ['ALERT_CELL_UNDERVOLTAGE', 'b'],
  ['pid_battery_energy', 'u8'],
  ['pid_wire_crash', 'u8'],
  ['pid_CAN_crash', 'u8'],
  ['pid_highest_cell_voltage_num', 'u8'],
  ['pid_lowest_cell_voltage_num', 'u8'],
  ['pid_cell_voltage_measurement_status', 'u8'],
  ['pid_battery_serial', 'u8', 13],
];

export const DATALAYER_INFO_GEELY_GEOMETRY_C = [
  ['ModuleTemperatures', 'i16', 6],
  ['BatterySoftwareVersion', 'u8', 16],
  ['BatteryHardwareVersion', 'u8', 16],
  ['BatterySerialNumber', 'u8', 28],
  ['soc', 'u16'],
  ['CC2voltage', 'u16'],
  ['cellMaxVoltageNumber', 'u16'],
  ['cellMinVoltageNumber', 'u16'],
  ['cellTotalAmount', 'u16'],
  ['specificialVoltage', 'u16'],
  ['unknown1', 'u16'],
  ['rawSOCmax', 'u16'],
  ['rawSOCmin', 'u16'],
  ['unknown4', 'u16'],
  ['capModMax', 'u16'],
  ['capModMin', 'u16'],
  ['unknown7', 'u16'],
  ['unknown8', 'u16'],
];

export const DATALAYER_INFO_KIAHYUNDAI64 = [
  ['cumulative_charge_current_ah', 'u32'],
  ['cumulative_discharge_current_ah', 'u32'],
  ['cumulative_energy_charged_kWh', 'u32'],
  ['cumulative_energy_discharged_kWh', 'u32'],
  ['powered_on_total_time', 'u32'],
  ['inverterVoltage', 'u16'],
  ['isolation_resistance_kOhm', 'u16'],
  ['number_of_standard_charging_sessions', 'u16'],
  ['number_of_fastcharging_sessions', 'u16'],
  ['accumulated_normal_charging_energy_kWh', 'u16'],
  ['accumulated_fastcharging_energy_kWh', 'u16'],
  ['battery_12V', 'u16'],
  ['temperature_water_inlet', 'i8'],
  ['powerRelayTemperature', 'i8'],
  ['total_cell_count', 'u8'],
  ['waterleakageSensor', 'u8'],
  ['batteryManagementMode', 'u8'],
  ['BMS_ign', 'u8'],
  ['batteryRelay', 'u8'],
  ['ecu_serial_number', 'u8', 16],
  ['ecu_version_number', 'u8', 16],
];

export const DATALAYER_INFO_TESLA = [
  ['BMS_info_bootGitHash', 'u64'],
  ['PCS_info_bootGitHash', 'u64'],
  ['HVP_info_bootGitHash', 'u64'],
  ['HVP_info_bootCrc', 'u32'],
  ['HVP_info_appCrc', 'u32'],
  ['PCS_info_appCrc', 'u32'],
  ['PCS_info_cpu2AppCrc', 'u32'],
  ['PCS_info_bootCrc', 'u32'],
  ['PCS_dcdc12vSupportLifetimekWh', 'u32'],
  ['BMS_info_appCrc', 'u32'],
  ['BMS_info_bootCrc', 'u32'],
  ['battery_packMass', 'u32'],
  ['battery_platformMaxBusVoltage', 'u32'],
  ['BMS_min_voltage', 'u32'],
  ['BMS_max_voltage', 'u32'],
  ['battery_max_charge_current', 'u32'],
  ['battery_max_discharge_current', 'u32'],
  ['battery_soc_min', 'u32'],
  ['battery_soc_max', 'u32'],
  ['battery_soc_ave', 'u32'],
  ['battery_soc_ui', 'u32'],
  ['BMS_info_buildConfigId', 'u16'],
  ['BMS_info_hardwareId', 'u16'],
  ['BMS_info_componentId', 'u16'],
  ['BMS_info_usageId', 'u16'],
  ['BMS_info_subUsageId', 'u16'],
  ['battery_dcdcLvBusVolt', 'u16'],
  ['battery_dcdcHvBusVolt', 'u16'],
  ['battery_dcdcLvOutputCurrent', 'u16'],
  ['battery_nominal_full_pack_energy', 'u16'],
  ['battery_nominal_full_pack_energy_m0', 'u16'],
  ['battery_nominal_energy_remaining', 'u16'],
  ['battery_nominal_energy_remaining_m0', 'u16'],
  ['battery_ideal_energy_remaining', 'u16'],
  ['battery_ideal_energy_remaining_m0', 'u16'],
  ['battery_energy_to_charge_complete', 'u16'],
  ['battery_energy_to_charge_complete_m1', 'u16'],
  ['battery_energy_buffer', 'u16'],
  ['battery_energy_buffer_m1', 'u16'],
  ['battery_expected_energy_remaining', 'u16'],
  ['battery_expected_energy_remaining_m1', 'u16'],
  ['battery_BrickVoltageMax', 'u16'],
  ['battery_BrickVoltageMin', 'u16'],
  ['HVP_hvp1v5Ref', 'u16'],
  ['HVP_shuntCurrentDebug', 'u16'],
  ['PCS_dcdcTemp', 'u16'],
  ['PCS_ambientTemp', 'u16'],
  ['PCS_chgPhATemp', 'u16'],
  ['PCS_chgPhBTemp', 'u16'],
  ['PCS_chgPhCTemp', 'u16'],
  ['PCS_dcdcMaxLvOutputCurrent', 'u16'],
  ['PCS_dcdcCurrentLimit', 'u16'],
  ['PCS_dcdcLvOutputCurrentTempLimit', 'u16'],
  ['PCS_dcdcUnifiedCommand', 'u16'],
  ['PCS_dcdcCLAControllerOutput', 'u16'],
  ['PCS_dcdcTankVoltage', 'u16'],
  ['PCS_dcdcTankVoltageTarget', 'u16'],
  ['PCS_dcdcClaCurrentFreq', 'u16'],
  ['PCS_dcdcTCommMeasured', 'u16'],
  ['PCS_dcdcShortTimeUs', 'u16'],
  ['PCS_dcdcHalfPeriodUs', 'u16'],
  ['PCS_dcdcIntervalMaxFrequency', 'u16'],
  ['PCS_dcdcIntervalMaxHvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMaxLvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMaxLvOutputCurr', 'u16'],
  ['PCS_dcdcIntervalMinFrequency', 'u16'],
  ['PCS_dcdcIntervalMinHvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMinLvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMinLvOutputCurr', 'u16'],
  ['battery_packConfigMultiplexer', 'u16'],
  ['battery_moduleType', 'u16'],
  ['battery_reservedConfig', 'u16'],
  ['BMS_isolationResistance', 'u16'],
  ['BMS_chgPowerAvailable', 'u16'],
  ['BMS_maxRegenPower', 'u16'],
  ['BMS_maxDischargePower', 'u16'],
  ['BMS_maxStationaryHeatPower', 'u16'],
  ['BMS_hvacPowerBudget', 'u16'],
  ['BMS_powerDissipation', 'u16'],
  ['BMS_inletActiveCoolTargetT', 'u16'],
  ['BMS_inletPassiveTargetT', 'u16'],
  ['BMS_inletActiveHeatTargetT', 'u16'],
  ['BMS_packTMin', 'u16'],
  ['BMS_packTMax', 'u16'],
  ['PCS_info_buildConfigId', 'u16'],
  ['PCS_info_hardwareId', 'u16'],
  ['PCS_info_componentId', 'u16'],
  ['PCS_dcdcMaxOutputCurrentAllowed', 'u16'],
  ['PCS_info_usageId', 'u16'],
  ['PCS_info_subUsageId', 'u16'],
  ['HVP_dcLinkVoltage', 'u16'],
  ['HVP_packVoltage', 'u16'],
  ['HVP_fcLinkVoltage', 'u16'],
  ['HVP_packContVoltage', 'u16'],
  ['HVP_packNegativeV', 'u16'],
  ['HVP_packPositiveV', 'u16'],
  ['HVP_pyroAnalog', 'u16'],
  ['HVP_dcLinkNegativeV', 'u16'],
  ['HVP_dcLinkPositiveV', 'u16'],
  ['HVP_fcLinkNegativeV', 'u16'],
  ['HVP_fcContCoilCurrent', 'u16'],
  ['HVP_fcContVoltage', 'u16'],
  ['HVP_hvilInVoltage', 'u16'],
  ['HVP_hvilOutVoltage', 'u16'],
  ['HVP_fcLinkPositiveV', 'u16'],
  ['HVP_packContCoilCurrent', 'u16'],
  ['HVP_battery12V', 'u16'],
  ['HVP_shuntRefVoltageDbg', 'u16'],
  ['HVP_shuntAuxCurrentDbg', 'u16'],
  ['HVP_shuntBarTempDbg', 'u16'],
  ['HVP_shuntAsicTempDbg', 'u16'],
  ['HVP_info_buildConfigId', 'u16'],
  ['HVP_info_hardwareId', 'u16'],
  ['HVP_info_componentId', 'u16'],
  ['HVP_info_usageId', 'u16'],
  ['HVP_info_subUsageId', 'u16'],
  ['hvil_status', 'u8'],
  ['packContNegativeState', 'u8'],
  ['packContPositiveState', 'u8'],
  ['packContactorSetState', 'u8'],
  ['battery_packCtrsRequestStatus', 'u8'],
  ['BMS_info_pcbaId', 'u8'],
  ['BMS_info_assemblyId', 'u8'],
  ['BMS_info_platformType', 'u8'],
  ['BMS_info_bootUdsProtoVersion', 'u8'],
  ['battery_beginning_of_life', 'u8'],
  ['battery_battTempPct', 'u8'],
  ['battery_BrickVoltageMaxNum', 'u8'],
  ['battery_BrickVoltageMinNum', 'u8'],
  ['battery_BrickTempMaxNum', 'u8'],
  ['battery_BrickTempMinNum', 'u8'],
  ['battery_BrickModelTMax', 'u8'],
  ['battery_BrickModelTMin', 'u8'],
  ['BMS_flowRequest', 'u8'],
  ['BMS_uiChargeStatus', 'u8'],
  ['BMS_contactorState', 'u8'],
  ['BMS_state', 'u8'],
  ['BMS_hvState', 'u8'],
  ['BMS_notEnoughPowerForHeatPump', 'u8'],
  ['BMS_powerLimitState', 'u8'],
  ['BMS_inverterTQF', 'u8'],
  ['PCS_dcdcPrechargeStatus', 'u8'],
  ['PCS_dcdc12VSupportStatus', 'u8'],
  ['PCS_dcdcHvBusDischargeStatus', 'u8'],
  ['PCS_dcdcMainState', 'u8'],
  ['PCS_dcdcSubState', 'u8'],
  ['PCS_dcdcPrechargeRtyCnt', 'u8'],
  ['PCS_dcdc12VSupportRtyCnt', 'u8'],
  ['PCS_dcdcDischargeRtyCnt', 'u8'],
  ['PCS_dcdcPwmEnableLine', 'u8'],
  ['PCS_dcdcSupportingFixedLvTarget', 'u8'],
  ['PCS_dcdcPrechargeRestartCnt', 'u8'],
  ['PCS_dcdcInitialPrechargeSubState', 'u8'],
  ['PCS_info_pcbaId', 'u8'],
  ['PCS_info_assemblyId', 'u8'],
  ['PCS_info_platformType', 'u8'],
  ['PCS_info_bootUdsProtoVersion', 'u8'],
  ['HVP_info_platformType', 'u8'],
  ['HVP_info_pcbaId', 'u8'],
  ['HVP_info_assemblyId', 'u8'],
  ['HVP_info_bootUdsProtoVersion', 'u8'],
  ['HVP_shuntHwMia', 'u8'],
  ['HVP_shuntAuxCurrentStatus', 'u8'],
  ['HVP_shuntBarTempStatus', 'u8'],
  ['HVP_shuntAsicTempStatus', 'u8'],
  ['packCtrsClosingBlocked', 'b'],
  ['pyroTestInProgress', 'b'],
  ['battery_packCtrsOpenNowRequested', 'b'],
  ['battery_packCtrsOpenRequested', 'b'],
  ['battery_packCtrsResetRequestRequired', 'b'],
  ['battery_dcLinkAllowedToEnergize', 'b'],
  ['BMS352_mux', 'b'],
  ['battery_full_charge_complete', 'b'],
  ['battery_fully_charged', 'b'],
  ['BMS_hvilFault', 'b'],
  ['BMS_diLimpRequest', 'b'],
  ['BMS_pcsPwmEnabled', 'b'],
  ['BMS_pcsNoFlowRequest', 'b'],
  ['BMS_noFlowRequest', 'b'],
  ['PCS_dcdcFaulted', 'b'],
  ['PCS_dcdcOutputIsLimited', 'b'],
  ['HVP_gpioPassivePyroDepl', 'b'],
  ['HVP_gpioPyroIsoEn', 'b'],
  ['HVP_gpioCpFaultIn', 'b'],
  ['HVP_gpioPackContPowerEn', 'b'],
  ['HVP_gpioHvCablesOk', 'b'],
  ['HVP_gpioHvpSelfEnable', 'b'],
  ['HVP_gpioLed', 'b'],
  ['HVP_gpioCrashSignal', 'b'],
  ['HVP_gpioShuntDataReady', 'b'],
  ['HVP_gpioFcContPosAux', 'b'],
  ['HVP_gpioFcContNegAux', 'b'],
  ['HVP_gpioBmsEout', 'b'],
  ['HVP_gpioCpFaultOut', 'b'],
  ['HVP_gpioPyroPor', 'b'],
  ['HVP_gpioShuntEn', 'b'],
  ['HVP_gpioHvpVerEn', 'b'],
  ['HVP_gpioPackCoontPosFlywheel', 'b'],
  ['HVP_gpioCpLatchEnable', 'b'],
  ['HVP_gpioPcsEnable', 'b'],
  ['HVP_gpioPcsDcdcPwmEnable', 'b'],
  ['HVP_gpioPcsChargePwmEnable', 'b'],
  ['HVP_gpioFcContPowerEnable', 'b'],
  ['HVP_gpioHvilEnable', 'b'],
  ['HVP_gpioSecDrdy', 'b'],
  ['HVP_packCurrentMia', 'b'],
  ['HVP_auxCurrentMia', 'b'],
  ['HVP_currentSenseMia', 'b'],
  ['HVP_shuntRefVoltageMismatch', 'b'],
  ['HVP_shuntThermistorMia', 'b'],
  ['BMS_partNumber', 'u8', 12],
  ['battery_serialNumber', 'u8', 15],
  ['battery_partNumber', 'u8', 12],
  ['PCS_partNumber', 'u8', 13],
  ['HVP_partNumber', 'u8', 13],
  ['', ' ', 3],
];

export const DATALAYER_INFO_NISSAN_LEAF = [
  ['CryptoChallenge', 'u32'],
  ['SolvedChallengeMSB', 'u32'],
  ['SolvedChallengeLSB', 'u32'],
  ['GIDS', 'u16'],
  ['ChargePowerLimit', 'u16'],
  ['battery_HX', 'u16'],
  ['Insulation', 'u16'],
  ['MaxPowerForCharger', 'i16'],
  ['temperature1', 'i16'],
  ['temperature2', 'i16'],
  ['temperature3', 'i16'],
  ['temperature4', 'i16'],
  ['LEAF_gen', 'u8'],
  ['RelayCutRequest', 'u8'],
  ['FailsafeStatus', 'u8'],
  ['Interlock', 'b'],
  ['Full', 'b'],
  ['Empty', 'b'],
  ['MainRelayOn', 'b'],
  ['HeatExist', 'b'],
  ['HeatingStop', 'b'],
  ['HeatingStart', 'b'],
  ['HeaterSendRequest', 'b'],
  ['UserRequestSOHreset', 'b'],
  ['challengeFailed', 'b'],
  ['BatterySerialNumber', 'u8', 15],
  ['BatteryPartNumber', 'u8', 7],
  ['BMSIDcode', 'u8', 8],
];

export const DATALAYER_INFO_MEB = [
  ['isolation_resistance', 'u32'],
  ['BMS_voltage_intermediate_dV', 'i32'],
  ['BMS_voltage_dV', 'i32'],
  ['battery_temperature_dC', 'u16'],
  ['rt_overcurrent', 'u8'],
  ['rt_CAN_fault', 'u8'],
  ['rt_overcharge', 'u8'],
  ['rt_SOC_high', 'u8'],
  ['rt_SOC_low', 'u8'],
  ['rt_SOC_jumping', 'u8'],
  ['rt_temp_difference', 'u8'],
  ['rt_cell_overtemp', 'u8'],
  ['rt_cell_undertemp', 'u8'],
  ['rt_battery_overvolt', 'u8'],
  ['rt_battery_undervol', 'u8'],
  ['rt_cell_overvolt', 'u8'],
  ['rt_cell_undervol', 'u8'],
  ['rt_cell_imbalance', 'u8'],
  ['rt_battery_unathorized', 'u8'],
  ['HVIL', 'u8'],
  ['BMS_mode', 'u8'],
  ['battery_diagnostic', 'u8'],
  ['status_HV_line', 'u8'],
  ['warning_support', 'u8'],
  ['BMS_status_voltage_free', 'u8'],
  ['BMS_error_status', 'u8'],
  ['BMS_Kl30c_Status', 'u8'],
  ['balancing_active', 'u8'],
  ['BMS_welded_contactors_status', 'u8'],
  ['balancing_request', 'b'],
  ['charging_active', 'b'],
  ['BMS_OBD_MIL', 'b'],
  ['BMS_error_lamp_req', 'b'],
  ['BMS_warning_lamp_req', 'b'],
  ['BMS_fault_performance', 'b'],
  ['BMS_fault_emergency_shutdown_crash', 'b'],
  ['BMS_error_shutdown_request', 'b'],
  ['BMS_error_shutdown', 'b'],
  ['SDSW', 'b'],
  ['pilotline', 'b'],
  ['transportmode', 'b'],
  ['componentprotection', 'b'],
  ['shutdown_active', 'b'],
  ['battery_heating', 'b'],
  ['', ' ', 2],
  ['temp_points', 'f', 18],
  ['celltemperature_dC', 'u16', 56],
];

export const DATALAYER_INFO_VOLVO_POLESTAR = [
  ['soc_bms', 'u16'],
  ['soc_calc', 'u16'],
  ['soc_rescaled', 'u16'],
  ['soh_bms', 'u16'],
  ['BECMsupplyVoltage', 'u16'],
  ['BECMBatteryVoltage', 'u16'],
  ['BECMUDynMaxLim', 'u16'],
  ['BECMUDynMinLim', 'u16'],
  ['HvBattPwrLimDcha1', 'u16'],
  ['HvBattPwrLimDchaSoft', 'u16'],
  ['HvBattPwrLimDchaSlowAgi', 'u16'],
  ['HvBattPwrLimChrgSlowAgi', 'u16'],
  ['BECMBatteryCurrent', 'i16'],
  ['HVSysRlySts', 'u8'],
  ['HVSysDCRlySts1', 'u8'],
  ['HVSysDCRlySts2', 'u8'],
  ['HVSysIsoRMonrSts', 'u8'],
  ['DTCcount', 'u8'],
  ['HVILstatusBits', 'u8'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestDTCreadout', 'b'],
  ['UserRequestBECMecuReset', 'b'],
];

export const DATALAYER_INFO_VOLVO_HYBRID = [
  ['soc_bms', 'u16'],
  ['soc_calc', 'u16'],
  ['soc_rescaled', 'u16'],
  ['soh_bms', 'u16'],
  ['BECMsupplyVoltage', 'u16'],
  ['BECMBatteryVoltage', 'u16'],
  ['BECMBatteryCurrent', 'u16'],
  ['BECMUDynMaxLim', 'u16'],
  ['BECMUDynMinLim', 'u16'],
  ['HvBattPwrLimDcha1', 'u16'],
  ['HvBattPwrLimDchaSoft', 'u16'],
  ['HVSysRlySts', 'u8'],
  ['HVSysDCRlySts1', 'u8'],
  ['HVSysDCRlySts2', 'u8'],
  ['HVSysIsoRMonrSts', 'u8'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestDTCreadout', 'b'],
  ['UserRequestBECMecuReset', 'b'],
];

export const DATALAYER_INFO_ZOE = [
  ['mileage_km', 'u16'],
  ['alltime_kWh', 'u16'],
  ['CUV', 'u8'],
  ['HVBIR', 'u8'],
  ['HVBUV', 'u8'],
  ['EOCR', 'u8'],
  ['HVBOC', 'u8'],
  ['HVBOT', 'u8'],
  ['HVBOV', 'u8'],
  ['COV', 'u8'],
];

export const DATALAYER_INFO_ZOE_PH2 = [
  ['battery_soc', 'u16'],
  ['battery_usable_soc', 'u16'],
  ['battery_soh', 'u16'],
  ['battery_pack_voltage', 'u16'],
  ['battery_max_cell_voltage', 'u16'],
  ['battery_min_cell_voltage', 'u16'],
  ['battery_12v', 'u16'],
  ['battery_avg_temp', 'u16'],
  ['battery_min_temp', 'u16'],
  ['battery_max_temp', 'u16'],
  ['battery_max_power', 'u16'],
  ['battery_interlock', 'u16'],
  ['battery_kwh', 'u16'],
  ['battery_current', 'u16'],
  ['battery_current_offset', 'u16'],
  ['battery_max_generated', 'u16'],
  ['battery_max_available', 'u16'],
  ['battery_current_voltage', 'u16'],
  ['battery_charging_status', 'u16'],
  ['battery_remaining_charge', 'u16'],
  ['battery_balance_capacity_total', 'u16'],
  ['battery_balance_time_total', 'u16'],
  ['battery_balance_capacity_sleep', 'u16'],
  ['battery_balance_time_sleep', 'u16'],
  ['battery_balance_capacity_wake', 'u16'],
  ['battery_balance_time_wake', 'u16'],
  ['battery_bms_state', 'u16'],
  ['battery_energy_complete', 'u16'],
  ['battery_energy_partial', 'u16'],
  ['battery_slave_failures', 'u16'],
  ['battery_mileage', 'u16'],
  ['battery_fan_speed', 'u16'],
  ['battery_fan_period', 'u16'],
  ['battery_fan_control', 'u16'],
  ['battery_fan_duty', 'u16'],
  ['battery_temporisation', 'u16'],
  ['battery_time', 'u16'],
  ['battery_pack_time', 'u16'],
  ['battery_soc_min', 'u16'],
  ['battery_soc_max', 'u16'],
  ['UserRequestNVROLReset', 'b'],
];

