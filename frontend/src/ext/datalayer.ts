export const DATALAYER_INFO_BOLTAMPERA_FIELDS: ([string, string] | [string, string, number])[] = [
  ['battery_5V_ref', 'u16'],
  ['battery_capacity_my17_18', 'u16'],
  ['battery_capacity_my19plus', 'u16'],
  ['battery_SOC_display', 'u16'],
  ['battery_SOC_raw_highprec', 'u16'],
  ['battery_max_temperature', 'u16'],
  ['battery_min_temperature', 'u16'],
  ['battery_max_cell_voltage', 'u16'],
  ['battery_min_cell_voltage', 'u16'],
  ['battery_lowest_cell', 'u16'],
  ['battery_highest_cell', 'u16'],
  ['battery_internal_resistance', 'u16'],
  ['battery_voltage_polled', 'u16'],
  ['battery_vehicle_isolation', 'u16'],
  ['battery_isolation_kohm', 'u16'],
  ['battery_HV_locked', 'u16'],
  ['battery_crash_event', 'u16'],
  ['battery_HVIL', 'u16'],
  ['battery_HVIL_status', 'u16'],
  ['battery_cell_average_voltage', 'u16'],
  ['battery_cell_average_voltage_2', 'u16'],
  ['battery_terminal_voltage', 'u16'],
  ['battery_ignition_power_mode', 'u16'],
  ['battery_module_temp_1', 'i16'],
  ['battery_module_temp_2', 'i16'],
  ['battery_module_temp_3', 'i16'],
  ['battery_module_temp_4', 'i16'],
  ['battery_module_temp_5', 'i16'],
  ['battery_module_temp_6', 'i16'],
  ['battery_current_7E7', 'i16'],
  ['battery_current_7E4', 'i16'],
];

export const DATALAYER_INFO_BOLTAMPERA: { [key: string]: [number, string] | [number, string, number] } = {
  battery_5V_ref: [0, 'u16'],
  battery_capacity_my17_18: [2, 'u16'],
  battery_capacity_my19plus: [4, 'u16'],
  battery_SOC_display: [6, 'u16'],
  battery_SOC_raw_highprec: [8, 'u16'],
  battery_max_temperature: [10, 'u16'],
  battery_min_temperature: [12, 'u16'],
  battery_max_cell_voltage: [14, 'u16'],
  battery_min_cell_voltage: [16, 'u16'],
  battery_lowest_cell: [18, 'u16'],
  battery_highest_cell: [20, 'u16'],
  battery_internal_resistance: [22, 'u16'],
  battery_voltage_polled: [24, 'u16'],
  battery_vehicle_isolation: [26, 'u16'],
  battery_isolation_kohm: [28, 'u16'],
  battery_HV_locked: [30, 'u16'],
  battery_crash_event: [32, 'u16'],
  battery_HVIL: [34, 'u16'],
  battery_HVIL_status: [36, 'u16'],
  battery_cell_average_voltage: [38, 'u16'],
  battery_cell_average_voltage_2: [40, 'u16'],
  battery_terminal_voltage: [42, 'u16'],
  battery_ignition_power_mode: [44, 'u16'],
  battery_module_temp_1: [46, 'i16'],
  battery_module_temp_2: [48, 'i16'],
  battery_module_temp_3: [50, 'i16'],
  battery_module_temp_4: [52, 'i16'],
  battery_module_temp_5: [54, 'i16'],
  battery_module_temp_6: [56, 'i16'],
  battery_current_7E7: [58, 'i16'],
  battery_current_7E4: [60, 'i16'],
};


export const DATALAYER_INFO_BMWPHEV_FIELDS: ([string, string] | [string, string, number])[] = [
  ['dtc_codes', 'u32', 32],
  ['dtc_status', 'u8', 32],
  ['dtc_last_read_millis', 'i32'],
  ['', ' ', 4],
  ['min_cell_voltage_data_age', 'u64'],
  ['max_cell_voltage_data_age', 'u64'],
  ['allowable_charge_amps', 'i32'],
  ['allowable_discharge_amps', 'i32'],
  ['iso_safety_int_kohm', 'i32'],
  ['iso_safety_ext_kohm', 'i32'],
  ['iso_safety_trg_kohm', 'i32'],
  ['iso_safety_ext_plausible', 'i32'],
  ['iso_safety_int_plausible', 'i32'],
  ['iso_safety_trg_plausible', 'i32'],
  ['iso_safety_kohm', 'i32'],
  ['iso_safety_kohm_quality', 'i32'],
  ['T30_Voltage', 'u16'],
  ['min_soh_state', 'u16'],
  ['max_soh_state', 'u16'],
  ['balancing_status', 'i16'],
  ['battery_voltage_after_contactor', 'i16'],
  ['ST_iso_ext', 'u8'],
  ['ST_iso_int', 'u8'],
  ['ST_valve_cooling', 'u8'],
  ['ST_interlock', 'u8'],
  ['ST_precharge', 'u8'],
  ['ST_DCSW', 'u8'],
  ['ST_EMG', 'u8'],
  ['ST_WELD', 'u8'],
  ['ST_isolation', 'u8'],
  ['ST_cold_shutoff_valve', 'u8'],
  ['hvil_status', 'u8'],
  ['battery_request_open_contactors', 'u8'],
  ['battery_request_open_contactors_instantly', 'u8'],
  ['battery_request_open_contactors_fast', 'u8'],
  ['battery_charging_condition_delta', 'u8'],
  ['battery_DC_link_voltage', 'u8'],
  ['dtc_count', 'u8'],
  ['dtc_read_in_progress', 'b'],
  ['dtc_read_failed', 'b'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestBMSReset', 'b'],
];

export const DATALAYER_INFO_BMWPHEV: { [key: string]: [number, string] | [number, string, number] } = {
  dtc_codes: [0, 'u32', 32],
  dtc_status: [128, 'u8', 32],
  dtc_last_read_millis: [160, 'i32'],
  min_cell_voltage_data_age: [168, 'u64'],
  max_cell_voltage_data_age: [176, 'u64'],
  allowable_charge_amps: [184, 'i32'],
  allowable_discharge_amps: [188, 'i32'],
  iso_safety_int_kohm: [192, 'i32'],
  iso_safety_ext_kohm: [196, 'i32'],
  iso_safety_trg_kohm: [200, 'i32'],
  iso_safety_ext_plausible: [204, 'i32'],
  iso_safety_int_plausible: [208, 'i32'],
  iso_safety_trg_plausible: [212, 'i32'],
  iso_safety_kohm: [216, 'i32'],
  iso_safety_kohm_quality: [220, 'i32'],
  T30_Voltage: [224, 'u16'],
  min_soh_state: [226, 'u16'],
  max_soh_state: [228, 'u16'],
  balancing_status: [230, 'i16'],
  battery_voltage_after_contactor: [232, 'i16'],
  ST_iso_ext: [234, 'u8'],
  ST_iso_int: [235, 'u8'],
  ST_valve_cooling: [236, 'u8'],
  ST_interlock: [237, 'u8'],
  ST_precharge: [238, 'u8'],
  ST_DCSW: [239, 'u8'],
  ST_EMG: [240, 'u8'],
  ST_WELD: [241, 'u8'],
  ST_isolation: [242, 'u8'],
  ST_cold_shutoff_valve: [243, 'u8'],
  hvil_status: [244, 'u8'],
  battery_request_open_contactors: [245, 'u8'],
  battery_request_open_contactors_instantly: [246, 'u8'],
  battery_request_open_contactors_fast: [247, 'u8'],
  battery_charging_condition_delta: [248, 'u8'],
  battery_DC_link_voltage: [249, 'u8'],
  dtc_count: [250, 'u8'],
  dtc_read_in_progress: [251, 'b'],
  dtc_read_failed: [252, 'b'],
  UserRequestDTCreset: [253, 'b'],
  UserRequestBMSReset: [254, 'b'],
};


export const DATALAYER_INFO_BYDATTO3_FIELDS: ([string, string] | [string, string, number])[] = [
  ['unknown0', 'u32'],
  ['unknown1', 'u32'],
  ['SOC_estimated', 'u16'],
  ['SOC_highprec', 'u16'],
  ['SOC_polled', 'u16'],
  ['voltage_periodic', 'u16'],
  ['voltage_polled', 'u16'],
  ['chargePower', 'u16'],
  ['charge_times', 'u16'],
  ['dischargePower', 'u16'],
  ['total_charged_ah', 'u16'],
  ['total_discharged_ah', 'u16'],
  ['total_charged_kwh', 'u16'],
  ['total_discharged_kwh', 'u16'],
  ['times_full_power', 'u16'],
  ['battery_temperatures', 'i16', 10],
  ['unknown10', 'u8'],
  ['unknown11', 'u8'],
  ['unknown12', 'u8'],
  ['unknown13', 'u8'],
  ['UserRequestCrashReset', 'b'],
  ['SOC_method', 'b'],
];

export const DATALAYER_INFO_BYDATTO3: { [key: string]: [number, string] | [number, string, number] } = {
  unknown0: [0, 'u32'],
  unknown1: [4, 'u32'],
  SOC_estimated: [8, 'u16'],
  SOC_highprec: [10, 'u16'],
  SOC_polled: [12, 'u16'],
  voltage_periodic: [14, 'u16'],
  voltage_polled: [16, 'u16'],
  chargePower: [18, 'u16'],
  charge_times: [20, 'u16'],
  dischargePower: [22, 'u16'],
  total_charged_ah: [24, 'u16'],
  total_discharged_ah: [26, 'u16'],
  total_charged_kwh: [28, 'u16'],
  total_discharged_kwh: [30, 'u16'],
  times_full_power: [32, 'u16'],
  battery_temperatures: [34, 'i16', 10],
  unknown10: [54, 'u8'],
  unknown11: [55, 'u8'],
  unknown12: [56, 'u8'],
  unknown13: [57, 'u8'],
  UserRequestCrashReset: [58, 'b'],
  SOC_method: [59, 'b'],
};


export const DATALAYER_INFO_CELLPOWER_FIELDS: ([string, string] | [string, string, number])[] = [
  ['system_state_discharge', 'b'],
  ['system_state_charge', 'b'],
  ['system_state_cellbalancing', 'b'],
  ['system_state_tricklecharge', 'b'],
  ['system_state_idle', 'b'],
  ['system_state_chargecompleted', 'b'],
  ['system_state_maintenancecharge', 'b'],
  ['IO_state_main_positive_relay', 'b'],
  ['IO_state_main_negative_relay', 'b'],
  ['IO_state_charge_enable', 'b'],
  ['IO_state_precharge_relay', 'b'],
  ['IO_state_discharge_enable', 'b'],
  ['IO_state_IO_6', 'b'],
  ['IO_state_IO_7', 'b'],
  ['IO_state_IO_8', 'b'],
  ['error_Cell_overvoltage', 'b'],
  ['error_Cell_undervoltage', 'b'],
  ['error_Cell_end_of_life_voltage', 'b'],
  ['error_Cell_voltage_misread', 'b'],
  ['error_Cell_over_temperature', 'b'],
  ['error_Cell_under_temperature', 'b'],
  ['error_Cell_unmanaged', 'b'],
  ['error_LMU_over_temperature', 'b'],
  ['error_LMU_under_temperature', 'b'],
  ['error_Temp_sensor_open_circuit', 'b'],
  ['error_Temp_sensor_short_circuit', 'b'],
  ['error_SUB_communication', 'b'],
  ['error_LMU_communication', 'b'],
  ['error_Over_current_IN', 'b'],
  ['error_Over_current_OUT', 'b'],
  ['error_Short_circuit', 'b'],
  ['error_Leak_detected', 'b'],
  ['error_Leak_detection_failed', 'b'],
  ['error_Voltage_difference', 'b'],
  ['error_BMCU_supply_over_voltage', 'b'],
  ['error_BMCU_supply_under_voltage', 'b'],
  ['error_Main_positive_contactor', 'b'],
  ['error_Main_negative_contactor', 'b'],
  ['error_Precharge_contactor', 'b'],
  ['error_Midpack_contactor', 'b'],
  ['error_Precharge_timeout', 'b'],
  ['error_Emergency_connector_override', 'b'],
  ['warning_High_cell_voltage', 'b'],
  ['warning_Low_cell_voltage', 'b'],
  ['warning_High_cell_temperature', 'b'],
  ['warning_Low_cell_temperature', 'b'],
  ['warning_High_LMU_temperature', 'b'],
  ['warning_Low_LMU_temperature', 'b'],
  ['warning_SUB_communication_interfered', 'b'],
  ['warning_LMU_communication_interfered', 'b'],
  ['warning_High_current_IN', 'b'],
  ['warning_High_current_OUT', 'b'],
  ['warning_Pack_resistance_difference', 'b'],
  ['warning_High_pack_resistance', 'b'],
  ['warning_Cell_resistance_difference', 'b'],
  ['warning_High_cell_resistance', 'b'],
  ['warning_High_BMCU_supply_voltage', 'b'],
  ['warning_Low_BMCU_supply_voltage', 'b'],
  ['warning_Low_SOC', 'b'],
  ['warning_Balancing_required_OCV_model', 'b'],
  ['warning_Charger_not_responding', 'b'],
];

export const DATALAYER_INFO_CELLPOWER: { [key: string]: [number, string] | [number, string, number] } = {
  system_state_discharge: [0, 'b'],
  system_state_charge: [1, 'b'],
  system_state_cellbalancing: [2, 'b'],
  system_state_tricklecharge: [3, 'b'],
  system_state_idle: [4, 'b'],
  system_state_chargecompleted: [5, 'b'],
  system_state_maintenancecharge: [6, 'b'],
  IO_state_main_positive_relay: [7, 'b'],
  IO_state_main_negative_relay: [8, 'b'],
  IO_state_charge_enable: [9, 'b'],
  IO_state_precharge_relay: [10, 'b'],
  IO_state_discharge_enable: [11, 'b'],
  IO_state_IO_6: [12, 'b'],
  IO_state_IO_7: [13, 'b'],
  IO_state_IO_8: [14, 'b'],
  error_Cell_overvoltage: [15, 'b'],
  error_Cell_undervoltage: [16, 'b'],
  error_Cell_end_of_life_voltage: [17, 'b'],
  error_Cell_voltage_misread: [18, 'b'],
  error_Cell_over_temperature: [19, 'b'],
  error_Cell_under_temperature: [20, 'b'],
  error_Cell_unmanaged: [21, 'b'],
  error_LMU_over_temperature: [22, 'b'],
  error_LMU_under_temperature: [23, 'b'],
  error_Temp_sensor_open_circuit: [24, 'b'],
  error_Temp_sensor_short_circuit: [25, 'b'],
  error_SUB_communication: [26, 'b'],
  error_LMU_communication: [27, 'b'],
  error_Over_current_IN: [28, 'b'],
  error_Over_current_OUT: [29, 'b'],
  error_Short_circuit: [30, 'b'],
  error_Leak_detected: [31, 'b'],
  error_Leak_detection_failed: [32, 'b'],
  error_Voltage_difference: [33, 'b'],
  error_BMCU_supply_over_voltage: [34, 'b'],
  error_BMCU_supply_under_voltage: [35, 'b'],
  error_Main_positive_contactor: [36, 'b'],
  error_Main_negative_contactor: [37, 'b'],
  error_Precharge_contactor: [38, 'b'],
  error_Midpack_contactor: [39, 'b'],
  error_Precharge_timeout: [40, 'b'],
  error_Emergency_connector_override: [41, 'b'],
  warning_High_cell_voltage: [42, 'b'],
  warning_Low_cell_voltage: [43, 'b'],
  warning_High_cell_temperature: [44, 'b'],
  warning_Low_cell_temperature: [45, 'b'],
  warning_High_LMU_temperature: [46, 'b'],
  warning_Low_LMU_temperature: [47, 'b'],
  warning_SUB_communication_interfered: [48, 'b'],
  warning_LMU_communication_interfered: [49, 'b'],
  warning_High_current_IN: [50, 'b'],
  warning_High_current_OUT: [51, 'b'],
  warning_Pack_resistance_difference: [52, 'b'],
  warning_High_pack_resistance: [53, 'b'],
  warning_Cell_resistance_difference: [54, 'b'],
  warning_High_cell_resistance: [55, 'b'],
  warning_High_BMCU_supply_voltage: [56, 'b'],
  warning_Low_BMCU_supply_voltage: [57, 'b'],
  warning_Low_SOC: [58, 'b'],
  warning_Balancing_required_OCV_model: [59, 'b'],
  warning_Charger_not_responding: [60, 'b'],
};


export const DATALAYER_INFO_CHADEMO_FIELDS: ([string, string] | [string, string, number])[] = [
  ['CHADEMO_Status', 'u8'],
  ['ControlProtocolNumberEV', 'u8'],
  ['UserRequestRestart', 'b'],
  ['UserRequestStop', 'b'],
  ['FaultBatteryVoltageDeviation', 'b'],
  ['FaultHighBatteryTemperature', 'b'],
  ['FaultBatteryCurrentDeviation', 'b'],
  ['FaultBatteryUnderVoltage', 'b'],
  ['FaultBatteryOverVoltage', 'b'],
];

export const DATALAYER_INFO_CHADEMO: { [key: string]: [number, string] | [number, string, number] } = {
  CHADEMO_Status: [0, 'u8'],
  ControlProtocolNumberEV: [1, 'u8'],
  UserRequestRestart: [2, 'b'],
  UserRequestStop: [3, 'b'],
  FaultBatteryVoltageDeviation: [4, 'b'],
  FaultHighBatteryTemperature: [5, 'b'],
  FaultBatteryCurrentDeviation: [6, 'b'],
  FaultBatteryUnderVoltage: [7, 'b'],
  FaultBatteryOverVoltage: [8, 'b'],
};


export const DATALAYER_INFO_CMFAEV_FIELDS: ([string, string] | [string, string, number])[] = [
  ['cumulative_energy_when_discharging', 'u64'],
  ['cumulative_energy_when_charging', 'u64'],
  ['cumulative_energy_in_regen', 'u64'],
  ['soc_z', 'u16'],
  ['soc_u', 'u16'],
  ['soh_average', 'u16'],
  ['max_regen_power', 'u16'],
  ['max_discharge_power', 'u16'],
  ['maximum_charge_power', 'u16'],
  ['SOH_available_power', 'u16'],
  ['SOH_generated_power', 'u16'],
  ['lead_acid_voltage', 'u16'],
  ['average_temperature', 'i16'],
  ['minimum_temperature', 'i16'],
  ['maximum_temperature', 'i16'],
  ['highest_cell_voltage_number', 'u8'],
  ['lowest_cell_voltage_number', 'u8'],
];

export const DATALAYER_INFO_CMFAEV: { [key: string]: [number, string] | [number, string, number] } = {
  cumulative_energy_when_discharging: [0, 'u64'],
  cumulative_energy_when_charging: [8, 'u64'],
  cumulative_energy_in_regen: [16, 'u64'],
  soc_z: [24, 'u16'],
  soc_u: [26, 'u16'],
  soh_average: [28, 'u16'],
  max_regen_power: [30, 'u16'],
  max_discharge_power: [32, 'u16'],
  maximum_charge_power: [34, 'u16'],
  SOH_available_power: [36, 'u16'],
  SOH_generated_power: [38, 'u16'],
  lead_acid_voltage: [40, 'u16'],
  average_temperature: [42, 'i16'],
  minimum_temperature: [44, 'i16'],
  maximum_temperature: [46, 'i16'],
  highest_cell_voltage_number: [48, 'u8'],
  lowest_cell_voltage_number: [49, 'u8'],
};


export const DATALAYER_INFO_ECMP_FIELDS: ([string, string] | [string, string, number])[] = [
  ['pid_insulation_res_neg', 'u32'],
  ['pid_insulation_res_pos', 'u32'],
  ['pid_max_current_10s', 'u32'],
  ['pid_max_discharge_10s', 'u32'],
  ['pid_max_discharge_30s', 'u32'],
  ['pid_max_charge_10s', 'u32'],
  ['pid_max_charge_30s', 'u32'],
  ['pid_energy_capacity', 'u32'],
  ['pid_insulation_res', 'u32'],
  ['pid_crash_counter', 'u32'],
  ['pid_history_data', 'u32'],
  ['pid_lowsoc_counter', 'u32'],
  ['pid_last_can_failure_detail', 'u32'],
  ['pid_hw_version_num', 'u32'],
  ['pid_sw_version_num', 'u32'],
  ['pid_factory_mode_control', 'u32'],
  ['pid_aux_fuse_state', 'u32'],
  ['pid_battery_state', 'u32'],
  ['pid_precharge_short_circuit', 'u32'],
  ['pid_eservice_plug_state', 'u32'],
  ['pid_mainfuse_state', 'u32'],
  ['pid_most_critical_fault', 'u32'],
  ['pid_current_time', 'u32'],
  ['pid_time_sent_by_car', 'u32'],
  ['pid_12v', 'u32'],
  ['pid_12v_abnormal', 'u32'],
  ['pid_hvil_in_voltage', 'u32'],
  ['pid_hvil_out_voltage', 'u32'],
  ['pid_hvil_state', 'u32'],
  ['pid_bms_state', 'u32'],
  ['pid_vehicle_speed', 'u32'],
  ['pid_time_spent_over_55c', 'u32'],
  ['pid_contactor_closing_counter', 'u32'],
  ['pid_date_of_manufacture', 'u32'],
  ['pid_current', 'i32'],
  ['HV_BATT_FC_INSU_MINUS_RES', 'u16'],
  ['HV_BATT_FC_INSU_PLUS_RES', 'u16'],
  ['HV_BATT_FC_VHL_INSU_PLUS_RES', 'u16'],
  ['HV_BATT_ONLY_INSU_MINUS_RES', 'u16'],
  ['InsulationResistance', 'u16'],
  ['pid_avg_cell_voltage', 'u16'],
  ['pid_sum_of_cells', 'u16'],
  ['pid_cell_min_capacity', 'u16'],
  ['pid_pack_voltage', 'u16'],
  ['pid_high_cell_voltage', 'u16'],
  ['pid_low_cell_voltage', 'u16'],
  ['pid_SOH_cell_1', 'u16'],
  ['InsulationDiag', 'u8'],
  ['MainConnectorState', 'u8'],
  ['CONTACTOR_OPENING_REASON', 'u8'],
  ['TBMU_FAULT_TYPE', 'u8'],
  ['CONTACTORS_STATE', 'u8'],
  ['pid_welding_detection', 'u8'],
  ['pid_reason_open', 'u8'],
  ['pid_contactor_status', 'u8'],
  ['pid_negative_contactor_control', 'u8'],
  ['pid_negative_contactor_status', 'u8'],
  ['pid_positive_contactor_control', 'u8'],
  ['pid_positive_contactor_status', 'u8'],
  ['pid_contactor_negative', 'u8'],
  ['pid_contactor_positive', 'u8'],
  ['pid_precharge_relay_control', 'u8'],
  ['pid_precharge_relay_status', 'u8'],
  ['pid_recharge_status', 'u8'],
  ['pid_delta_temperature', 'u8'],
  ['pid_coldest_module', 'u8'],
  ['pid_lowest_temperature', 'u8'],
  ['pid_average_temperature', 'u8'],
  ['pid_highest_temperature', 'u8'],
  ['pid_hottest_module', 'u8'],
  ['MysteryVan', 'b'],
  ['CrashMemorized', 'b'],
  ['InterlockOpen', 'b'],
  ['UserRequestContactorReset', 'b'],
  ['UserRequestCollisionReset', 'b'],
  ['UserRequestIsolationReset', 'b'],
  ['UserRequestDisableIsoMonitoring', 'b'],
  ['ALERT_CELL_POOR_CONSIST', 'b'],
  ['ALERT_OVERCHARGE', 'b'],
  ['ALERT_BATT', 'b'],
  ['ALERT_LOW_SOC', 'b'],
  ['ALERT_HIGH_SOC', 'b'],
  ['ALERT_SOC_JUMP', 'b'],
  ['ALERT_TEMP_DIFF', 'b'],
  ['ALERT_HIGH_TEMP', 'b'],
  ['ALERT_OVERVOLTAGE', 'b'],
  ['ALERT_CELL_OVERVOLTAGE', 'b'],
  ['ALERT_CELL_UNDERVOLTAGE', 'b'],
  ['pid_battery_energy', 'u8'],
  ['pid_wire_crash', 'u8'],
  ['pid_CAN_crash', 'u8'],
  ['pid_highest_cell_voltage_num', 'u8'],
  ['pid_lowest_cell_voltage_num', 'u8'],
  ['pid_cell_voltage_measurement_status', 'u8'],
  ['pid_battery_serial', 'u8', 13],
];

export const DATALAYER_INFO_ECMP: { [key: string]: [number, string] | [number, string, number] } = {
  pid_insulation_res_neg: [0, 'u32'],
  pid_insulation_res_pos: [4, 'u32'],
  pid_max_current_10s: [8, 'u32'],
  pid_max_discharge_10s: [12, 'u32'],
  pid_max_discharge_30s: [16, 'u32'],
  pid_max_charge_10s: [20, 'u32'],
  pid_max_charge_30s: [24, 'u32'],
  pid_energy_capacity: [28, 'u32'],
  pid_insulation_res: [32, 'u32'],
  pid_crash_counter: [36, 'u32'],
  pid_history_data: [40, 'u32'],
  pid_lowsoc_counter: [44, 'u32'],
  pid_last_can_failure_detail: [48, 'u32'],
  pid_hw_version_num: [52, 'u32'],
  pid_sw_version_num: [56, 'u32'],
  pid_factory_mode_control: [60, 'u32'],
  pid_aux_fuse_state: [64, 'u32'],
  pid_battery_state: [68, 'u32'],
  pid_precharge_short_circuit: [72, 'u32'],
  pid_eservice_plug_state: [76, 'u32'],
  pid_mainfuse_state: [80, 'u32'],
  pid_most_critical_fault: [84, 'u32'],
  pid_current_time: [88, 'u32'],
  pid_time_sent_by_car: [92, 'u32'],
  pid_12v: [96, 'u32'],
  pid_12v_abnormal: [100, 'u32'],
  pid_hvil_in_voltage: [104, 'u32'],
  pid_hvil_out_voltage: [108, 'u32'],
  pid_hvil_state: [112, 'u32'],
  pid_bms_state: [116, 'u32'],
  pid_vehicle_speed: [120, 'u32'],
  pid_time_spent_over_55c: [124, 'u32'],
  pid_contactor_closing_counter: [128, 'u32'],
  pid_date_of_manufacture: [132, 'u32'],
  pid_current: [136, 'i32'],
  HV_BATT_FC_INSU_MINUS_RES: [140, 'u16'],
  HV_BATT_FC_INSU_PLUS_RES: [142, 'u16'],
  HV_BATT_FC_VHL_INSU_PLUS_RES: [144, 'u16'],
  HV_BATT_ONLY_INSU_MINUS_RES: [146, 'u16'],
  InsulationResistance: [148, 'u16'],
  pid_avg_cell_voltage: [150, 'u16'],
  pid_sum_of_cells: [152, 'u16'],
  pid_cell_min_capacity: [154, 'u16'],
  pid_pack_voltage: [156, 'u16'],
  pid_high_cell_voltage: [158, 'u16'],
  pid_low_cell_voltage: [160, 'u16'],
  pid_SOH_cell_1: [162, 'u16'],
  InsulationDiag: [164, 'u8'],
  MainConnectorState: [165, 'u8'],
  CONTACTOR_OPENING_REASON: [166, 'u8'],
  TBMU_FAULT_TYPE: [167, 'u8'],
  CONTACTORS_STATE: [168, 'u8'],
  pid_welding_detection: [169, 'u8'],
  pid_reason_open: [170, 'u8'],
  pid_contactor_status: [171, 'u8'],
  pid_negative_contactor_control: [172, 'u8'],
  pid_negative_contactor_status: [173, 'u8'],
  pid_positive_contactor_control: [174, 'u8'],
  pid_positive_contactor_status: [175, 'u8'],
  pid_contactor_negative: [176, 'u8'],
  pid_contactor_positive: [177, 'u8'],
  pid_precharge_relay_control: [178, 'u8'],
  pid_precharge_relay_status: [179, 'u8'],
  pid_recharge_status: [180, 'u8'],
  pid_delta_temperature: [181, 'u8'],
  pid_coldest_module: [182, 'u8'],
  pid_lowest_temperature: [183, 'u8'],
  pid_average_temperature: [184, 'u8'],
  pid_highest_temperature: [185, 'u8'],
  pid_hottest_module: [186, 'u8'],
  MysteryVan: [187, 'b'],
  CrashMemorized: [188, 'b'],
  InterlockOpen: [189, 'b'],
  UserRequestContactorReset: [190, 'b'],
  UserRequestCollisionReset: [191, 'b'],
  UserRequestIsolationReset: [192, 'b'],
  UserRequestDisableIsoMonitoring: [193, 'b'],
  ALERT_CELL_POOR_CONSIST: [194, 'b'],
  ALERT_OVERCHARGE: [195, 'b'],
  ALERT_BATT: [196, 'b'],
  ALERT_LOW_SOC: [197, 'b'],
  ALERT_HIGH_SOC: [198, 'b'],
  ALERT_SOC_JUMP: [199, 'b'],
  ALERT_TEMP_DIFF: [200, 'b'],
  ALERT_HIGH_TEMP: [201, 'b'],
  ALERT_OVERVOLTAGE: [202, 'b'],
  ALERT_CELL_OVERVOLTAGE: [203, 'b'],
  ALERT_CELL_UNDERVOLTAGE: [204, 'b'],
  pid_battery_energy: [205, 'u8'],
  pid_wire_crash: [206, 'u8'],
  pid_CAN_crash: [207, 'u8'],
  pid_highest_cell_voltage_num: [208, 'u8'],
  pid_lowest_cell_voltage_num: [209, 'u8'],
  pid_cell_voltage_measurement_status: [210, 'u8'],
  pid_battery_serial: [211, 'u8', 13],
};


export const DATALAYER_INFO_GEELY_GEOMETRY_C_FIELDS: ([string, string] | [string, string, number])[] = [
  ['ModuleTemperatures', 'i16', 6],
  ['BatterySoftwareVersion', 'u8', 16],
  ['BatteryHardwareVersion', 'u8', 16],
  ['BatterySerialNumber', 'u8', 28],
  ['soc', 'u16'],
  ['CC2voltage', 'u16'],
  ['cellMaxVoltageNumber', 'u16'],
  ['cellMinVoltageNumber', 'u16'],
  ['cellTotalAmount', 'u16'],
  ['specificialVoltage', 'u16'],
  ['unknown1', 'u16'],
  ['rawSOCmax', 'u16'],
  ['rawSOCmin', 'u16'],
  ['unknown4', 'u16'],
  ['capModMax', 'u16'],
  ['capModMin', 'u16'],
  ['unknown7', 'u16'],
  ['unknown8', 'u16'],
];

export const DATALAYER_INFO_GEELY_GEOMETRY_C: { [key: string]: [number, string] | [number, string, number] } = {
  ModuleTemperatures: [0, 'i16', 6],
  BatterySoftwareVersion: [12, 'u8', 16],
  BatteryHardwareVersion: [28, 'u8', 16],
  BatterySerialNumber: [44, 'u8', 28],
  soc: [72, 'u16'],
  CC2voltage: [74, 'u16'],
  cellMaxVoltageNumber: [76, 'u16'],
  cellMinVoltageNumber: [78, 'u16'],
  cellTotalAmount: [80, 'u16'],
  specificialVoltage: [82, 'u16'],
  unknown1: [84, 'u16'],
  rawSOCmax: [86, 'u16'],
  rawSOCmin: [88, 'u16'],
  unknown4: [90, 'u16'],
  capModMax: [92, 'u16'],
  capModMin: [94, 'u16'],
  unknown7: [96, 'u16'],
  unknown8: [98, 'u16'],
};


export const DATALAYER_INFO_KIAHYUNDAI64_FIELDS: ([string, string] | [string, string, number])[] = [
  ['cumulative_charge_current_ah', 'u32'],
  ['cumulative_discharge_current_ah', 'u32'],
  ['cumulative_energy_charged_kWh', 'u32'],
  ['cumulative_energy_discharged_kWh', 'u32'],
  ['powered_on_total_time', 'u32'],
  ['inverterVoltage', 'u16'],
  ['isolation_resistance_kOhm', 'u16'],
  ['number_of_standard_charging_sessions', 'u16'],
  ['number_of_fastcharging_sessions', 'u16'],
  ['accumulated_normal_charging_energy_kWh', 'u16'],
  ['accumulated_fastcharging_energy_kWh', 'u16'],
  ['battery_12V', 'u16'],
  ['temperature_water_inlet', 'i8'],
  ['powerRelayTemperature', 'i8'],
  ['total_cell_count', 'u8'],
  ['waterleakageSensor', 'u8'],
  ['batteryManagementMode', 'u8'],
  ['BMS_ign', 'u8'],
  ['batteryRelay', 'u8'],
  ['ecu_serial_number', 'u8', 16],
  ['ecu_version_number', 'u8', 16],
];

export const DATALAYER_INFO_KIAHYUNDAI64: { [key: string]: [number, string] | [number, string, number] } = {
  cumulative_charge_current_ah: [0, 'u32'],
  cumulative_discharge_current_ah: [4, 'u32'],
  cumulative_energy_charged_kWh: [8, 'u32'],
  cumulative_energy_discharged_kWh: [12, 'u32'],
  powered_on_total_time: [16, 'u32'],
  inverterVoltage: [20, 'u16'],
  isolation_resistance_kOhm: [22, 'u16'],
  number_of_standard_charging_sessions: [24, 'u16'],
  number_of_fastcharging_sessions: [26, 'u16'],
  accumulated_normal_charging_energy_kWh: [28, 'u16'],
  accumulated_fastcharging_energy_kWh: [30, 'u16'],
  battery_12V: [32, 'u16'],
  temperature_water_inlet: [34, 'i8'],
  powerRelayTemperature: [35, 'i8'],
  total_cell_count: [36, 'u8'],
  waterleakageSensor: [37, 'u8'],
  batteryManagementMode: [38, 'u8'],
  BMS_ign: [39, 'u8'],
  batteryRelay: [40, 'u8'],
  ecu_serial_number: [41, 'u8', 16],
  ecu_version_number: [57, 'u8', 16],
};


export const DATALAYER_INFO_TESLA_FIELDS: ([string, string] | [string, string, number])[] = [
  ['BMS_info_bootGitHash', 'u64'],
  ['PCS_info_bootGitHash', 'u64'],
  ['HVP_info_bootGitHash', 'u64'],
  ['HVP_info_bootCrc', 'u32'],
  ['HVP_info_appCrc', 'u32'],
  ['PCS_info_appCrc', 'u32'],
  ['PCS_info_cpu2AppCrc', 'u32'],
  ['PCS_info_bootCrc', 'u32'],
  ['PCS_dcdc12vSupportLifetimekWh', 'u32'],
  ['BMS_info_appCrc', 'u32'],
  ['BMS_info_bootCrc', 'u32'],
  ['battery_packMass', 'u32'],
  ['battery_platformMaxBusVoltage', 'u32'],
  ['BMS_min_voltage', 'u32'],
  ['BMS_max_voltage', 'u32'],
  ['battery_max_charge_current', 'u32'],
  ['battery_max_discharge_current', 'u32'],
  ['battery_soc_min', 'u32'],
  ['battery_soc_max', 'u32'],
  ['battery_soc_ave', 'u32'],
  ['battery_soc_ui', 'u32'],
  ['BMS_info_buildConfigId', 'u16'],
  ['BMS_info_hardwareId', 'u16'],
  ['BMS_info_componentId', 'u16'],
  ['BMS_info_usageId', 'u16'],
  ['BMS_info_subUsageId', 'u16'],
  ['battery_dcdcLvBusVolt', 'u16'],
  ['battery_dcdcHvBusVolt', 'u16'],
  ['battery_dcdcLvOutputCurrent', 'u16'],
  ['battery_nominal_full_pack_energy', 'u16'],
  ['battery_nominal_full_pack_energy_m0', 'u16'],
  ['battery_nominal_energy_remaining', 'u16'],
  ['battery_nominal_energy_remaining_m0', 'u16'],
  ['battery_ideal_energy_remaining', 'u16'],
  ['battery_ideal_energy_remaining_m0', 'u16'],
  ['battery_energy_to_charge_complete', 'u16'],
  ['battery_energy_to_charge_complete_m1', 'u16'],
  ['battery_energy_buffer', 'u16'],
  ['battery_energy_buffer_m1', 'u16'],
  ['battery_expected_energy_remaining', 'u16'],
  ['battery_expected_energy_remaining_m1', 'u16'],
  ['battery_BrickVoltageMax', 'u16'],
  ['battery_BrickVoltageMin', 'u16'],
  ['HVP_hvp1v5Ref', 'u16'],
  ['HVP_shuntCurrentDebug', 'u16'],
  ['PCS_dcdcTemp', 'u16'],
  ['PCS_ambientTemp', 'u16'],
  ['PCS_chgPhATemp', 'u16'],
  ['PCS_chgPhBTemp', 'u16'],
  ['PCS_chgPhCTemp', 'u16'],
  ['PCS_dcdcMaxLvOutputCurrent', 'u16'],
  ['PCS_dcdcCurrentLimit', 'u16'],
  ['PCS_dcdcLvOutputCurrentTempLimit', 'u16'],
  ['PCS_dcdcUnifiedCommand', 'u16'],
  ['PCS_dcdcCLAControllerOutput', 'u16'],
  ['PCS_dcdcTankVoltage', 'u16'],
  ['PCS_dcdcTankVoltageTarget', 'u16'],
  ['PCS_dcdcClaCurrentFreq', 'u16'],
  ['PCS_dcdcTCommMeasured', 'u16'],
  ['PCS_dcdcShortTimeUs', 'u16'],
  ['PCS_dcdcHalfPeriodUs', 'u16'],
  ['PCS_dcdcIntervalMaxFrequency', 'u16'],
  ['PCS_dcdcIntervalMaxHvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMaxLvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMaxLvOutputCurr', 'u16'],
  ['PCS_dcdcIntervalMinFrequency', 'u16'],
  ['PCS_dcdcIntervalMinHvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMinLvBusVolt', 'u16'],
  ['PCS_dcdcIntervalMinLvOutputCurr', 'u16'],
  ['battery_packConfigMultiplexer', 'u16'],
  ['battery_moduleType', 'u16'],
  ['battery_reservedConfig', 'u16'],
  ['BMS_isolationResistance', 'u16'],
  ['BMS_chgPowerAvailable', 'u16'],
  ['BMS_maxRegenPower', 'u16'],
  ['BMS_maxDischargePower', 'u16'],
  ['BMS_maxStationaryHeatPower', 'u16'],
  ['BMS_hvacPowerBudget', 'u16'],
  ['BMS_powerDissipation', 'u16'],
  ['BMS_inletActiveCoolTargetT', 'u16'],
  ['BMS_inletPassiveTargetT', 'u16'],
  ['BMS_inletActiveHeatTargetT', 'u16'],
  ['BMS_packTMin', 'u16'],
  ['BMS_packTMax', 'u16'],
  ['PCS_info_buildConfigId', 'u16'],
  ['PCS_info_hardwareId', 'u16'],
  ['PCS_info_componentId', 'u16'],
  ['PCS_dcdcMaxOutputCurrentAllowed', 'u16'],
  ['PCS_info_usageId', 'u16'],
  ['PCS_info_subUsageId', 'u16'],
  ['HVP_dcLinkVoltage', 'u16'],
  ['HVP_packVoltage', 'u16'],
  ['HVP_fcLinkVoltage', 'u16'],
  ['HVP_packContVoltage', 'u16'],
  ['HVP_packNegativeV', 'u16'],
  ['HVP_packPositiveV', 'u16'],
  ['HVP_pyroAnalog', 'u16'],
  ['HVP_dcLinkNegativeV', 'u16'],
  ['HVP_dcLinkPositiveV', 'u16'],
  ['HVP_fcLinkNegativeV', 'u16'],
  ['HVP_fcContCoilCurrent', 'u16'],
  ['HVP_fcContVoltage', 'u16'],
  ['HVP_hvilInVoltage', 'u16'],
  ['HVP_hvilOutVoltage', 'u16'],
  ['HVP_fcLinkPositiveV', 'u16'],
  ['HVP_packContCoilCurrent', 'u16'],
  ['HVP_battery12V', 'u16'],
  ['HVP_shuntRefVoltageDbg', 'u16'],
  ['HVP_shuntAuxCurrentDbg', 'u16'],
  ['HVP_shuntBarTempDbg', 'u16'],
  ['HVP_shuntAsicTempDbg', 'u16'],
  ['HVP_info_buildConfigId', 'u16'],
  ['HVP_info_hardwareId', 'u16'],
  ['HVP_info_componentId', 'u16'],
  ['HVP_info_usageId', 'u16'],
  ['HVP_info_subUsageId', 'u16'],
  ['hvil_status', 'u8'],
  ['packContNegativeState', 'u8'],
  ['packContPositiveState', 'u8'],
  ['packContactorSetState', 'u8'],
  ['battery_packCtrsRequestStatus', 'u8'],
  ['BMS_info_pcbaId', 'u8'],
  ['BMS_info_assemblyId', 'u8'],
  ['BMS_info_platformType', 'u8'],
  ['BMS_info_bootUdsProtoVersion', 'u8'],
  ['battery_beginning_of_life', 'u8'],
  ['battery_battTempPct', 'u8'],
  ['battery_BrickVoltageMaxNum', 'u8'],
  ['battery_BrickVoltageMinNum', 'u8'],
  ['battery_BrickTempMaxNum', 'u8'],
  ['battery_BrickTempMinNum', 'u8'],
  ['battery_BrickModelTMax', 'u8'],
  ['battery_BrickModelTMin', 'u8'],
  ['BMS_flowRequest', 'u8'],
  ['BMS_uiChargeStatus', 'u8'],
  ['BMS_contactorState', 'u8'],
  ['BMS_state', 'u8'],
  ['BMS_hvState', 'u8'],
  ['BMS_notEnoughPowerForHeatPump', 'u8'],
  ['BMS_powerLimitState', 'u8'],
  ['BMS_inverterTQF', 'u8'],
  ['PCS_dcdcPrechargeStatus', 'u8'],
  ['PCS_dcdc12VSupportStatus', 'u8'],
  ['PCS_dcdcHvBusDischargeStatus', 'u8'],
  ['PCS_dcdcMainState', 'u8'],
  ['PCS_dcdcSubState', 'u8'],
  ['PCS_dcdcPrechargeRtyCnt', 'u8'],
  ['PCS_dcdc12VSupportRtyCnt', 'u8'],
  ['PCS_dcdcDischargeRtyCnt', 'u8'],
  ['PCS_dcdcPwmEnableLine', 'u8'],
  ['PCS_dcdcSupportingFixedLvTarget', 'u8'],
  ['PCS_dcdcPrechargeRestartCnt', 'u8'],
  ['PCS_dcdcInitialPrechargeSubState', 'u8'],
  ['PCS_info_pcbaId', 'u8'],
  ['PCS_info_assemblyId', 'u8'],
  ['PCS_info_platformType', 'u8'],
  ['PCS_info_bootUdsProtoVersion', 'u8'],
  ['HVP_info_platformType', 'u8'],
  ['HVP_info_pcbaId', 'u8'],
  ['HVP_info_assemblyId', 'u8'],
  ['HVP_info_bootUdsProtoVersion', 'u8'],
  ['HVP_shuntHwMia', 'u8'],
  ['HVP_shuntAuxCurrentStatus', 'u8'],
  ['HVP_shuntBarTempStatus', 'u8'],
  ['HVP_shuntAsicTempStatus', 'u8'],
  ['packCtrsClosingBlocked', 'b'],
  ['pyroTestInProgress', 'b'],
  ['battery_packCtrsOpenNowRequested', 'b'],
  ['battery_packCtrsOpenRequested', 'b'],
  ['battery_packCtrsResetRequestRequired', 'b'],
  ['battery_dcLinkAllowedToEnergize', 'b'],
  ['BMS352_mux', 'b'],
  ['battery_full_charge_complete', 'b'],
  ['battery_fully_charged', 'b'],
  ['BMS_hvilFault', 'b'],
  ['BMS_diLimpRequest', 'b'],
  ['BMS_pcsPwmEnabled', 'b'],
  ['BMS_pcsNoFlowRequest', 'b'],
  ['BMS_noFlowRequest', 'b'],
  ['PCS_dcdcFaulted', 'b'],
  ['PCS_dcdcOutputIsLimited', 'b'],
  ['HVP_gpioPassivePyroDepl', 'b'],
  ['HVP_gpioPyroIsoEn', 'b'],
  ['HVP_gpioCpFaultIn', 'b'],
  ['HVP_gpioPackContPowerEn', 'b'],
  ['HVP_gpioHvCablesOk', 'b'],
  ['HVP_gpioHvpSelfEnable', 'b'],
  ['HVP_gpioLed', 'b'],
  ['HVP_gpioCrashSignal', 'b'],
  ['HVP_gpioShuntDataReady', 'b'],
  ['HVP_gpioFcContPosAux', 'b'],
  ['HVP_gpioFcContNegAux', 'b'],
  ['HVP_gpioBmsEout', 'b'],
  ['HVP_gpioCpFaultOut', 'b'],
  ['HVP_gpioPyroPor', 'b'],
  ['HVP_gpioShuntEn', 'b'],
  ['HVP_gpioHvpVerEn', 'b'],
  ['HVP_gpioPackCoontPosFlywheel', 'b'],
  ['HVP_gpioCpLatchEnable', 'b'],
  ['HVP_gpioPcsEnable', 'b'],
  ['HVP_gpioPcsDcdcPwmEnable', 'b'],
  ['HVP_gpioPcsChargePwmEnable', 'b'],
  ['HVP_gpioFcContPowerEnable', 'b'],
  ['HVP_gpioHvilEnable', 'b'],
  ['HVP_gpioSecDrdy', 'b'],
  ['HVP_packCurrentMia', 'b'],
  ['HVP_auxCurrentMia', 'b'],
  ['HVP_currentSenseMia', 'b'],
  ['HVP_shuntRefVoltageMismatch', 'b'],
  ['HVP_shuntThermistorMia', 'b'],
  ['BMS_partNumber', 'u8', 12],
  ['battery_serialNumber', 'u8', 15],
  ['battery_partNumber', 'u8', 12],
  ['PCS_partNumber', 'u8', 13],
  ['HVP_partNumber', 'u8', 13],
  ['', ' ', 3],
];

export const DATALAYER_INFO_TESLA: { [key: string]: [number, string] | [number, string, number] } = {
  BMS_info_bootGitHash: [0, 'u64'],
  PCS_info_bootGitHash: [8, 'u64'],
  HVP_info_bootGitHash: [16, 'u64'],
  HVP_info_bootCrc: [24, 'u32'],
  HVP_info_appCrc: [28, 'u32'],
  PCS_info_appCrc: [32, 'u32'],
  PCS_info_cpu2AppCrc: [36, 'u32'],
  PCS_info_bootCrc: [40, 'u32'],
  PCS_dcdc12vSupportLifetimekWh: [44, 'u32'],
  BMS_info_appCrc: [48, 'u32'],
  BMS_info_bootCrc: [52, 'u32'],
  battery_packMass: [56, 'u32'],
  battery_platformMaxBusVoltage: [60, 'u32'],
  BMS_min_voltage: [64, 'u32'],
  BMS_max_voltage: [68, 'u32'],
  battery_max_charge_current: [72, 'u32'],
  battery_max_discharge_current: [76, 'u32'],
  battery_soc_min: [80, 'u32'],
  battery_soc_max: [84, 'u32'],
  battery_soc_ave: [88, 'u32'],
  battery_soc_ui: [92, 'u32'],
  BMS_info_buildConfigId: [96, 'u16'],
  BMS_info_hardwareId: [98, 'u16'],
  BMS_info_componentId: [100, 'u16'],
  BMS_info_usageId: [102, 'u16'],
  BMS_info_subUsageId: [104, 'u16'],
  battery_dcdcLvBusVolt: [106, 'u16'],
  battery_dcdcHvBusVolt: [108, 'u16'],
  battery_dcdcLvOutputCurrent: [110, 'u16'],
  battery_nominal_full_pack_energy: [112, 'u16'],
  battery_nominal_full_pack_energy_m0: [114, 'u16'],
  battery_nominal_energy_remaining: [116, 'u16'],
  battery_nominal_energy_remaining_m0: [118, 'u16'],
  battery_ideal_energy_remaining: [120, 'u16'],
  battery_ideal_energy_remaining_m0: [122, 'u16'],
  battery_energy_to_charge_complete: [124, 'u16'],
  battery_energy_to_charge_complete_m1: [126, 'u16'],
  battery_energy_buffer: [128, 'u16'],
  battery_energy_buffer_m1: [130, 'u16'],
  battery_expected_energy_remaining: [132, 'u16'],
  battery_expected_energy_remaining_m1: [134, 'u16'],
  battery_BrickVoltageMax: [136, 'u16'],
  battery_BrickVoltageMin: [138, 'u16'],
  HVP_hvp1v5Ref: [140, 'u16'],
  HVP_shuntCurrentDebug: [142, 'u16'],
  PCS_dcdcTemp: [144, 'u16'],
  PCS_ambientTemp: [146, 'u16'],
  PCS_chgPhATemp: [148, 'u16'],
  PCS_chgPhBTemp: [150, 'u16'],
  PCS_chgPhCTemp: [152, 'u16'],
  PCS_dcdcMaxLvOutputCurrent: [154, 'u16'],
  PCS_dcdcCurrentLimit: [156, 'u16'],
  PCS_dcdcLvOutputCurrentTempLimit: [158, 'u16'],
  PCS_dcdcUnifiedCommand: [160, 'u16'],
  PCS_dcdcCLAControllerOutput: [162, 'u16'],
  PCS_dcdcTankVoltage: [164, 'u16'],
  PCS_dcdcTankVoltageTarget: [166, 'u16'],
  PCS_dcdcClaCurrentFreq: [168, 'u16'],
  PCS_dcdcTCommMeasured: [170, 'u16'],
  PCS_dcdcShortTimeUs: [172, 'u16'],
  PCS_dcdcHalfPeriodUs: [174, 'u16'],
  PCS_dcdcIntervalMaxFrequency: [176, 'u16'],
  PCS_dcdcIntervalMaxHvBusVolt: [178, 'u16'],
  PCS_dcdcIntervalMaxLvBusVolt: [180, 'u16'],
  PCS_dcdcIntervalMaxLvOutputCurr: [182, 'u16'],
  PCS_dcdcIntervalMinFrequency: [184, 'u16'],
  PCS_dcdcIntervalMinHvBusVolt: [186, 'u16'],
  PCS_dcdcIntervalMinLvBusVolt: [188, 'u16'],
  PCS_dcdcIntervalMinLvOutputCurr: [190, 'u16'],
  battery_packConfigMultiplexer: [192, 'u16'],
  battery_moduleType: [194, 'u16'],
  battery_reservedConfig: [196, 'u16'],
  BMS_isolationResistance: [198, 'u16'],
  BMS_chgPowerAvailable: [200, 'u16'],
  BMS_maxRegenPower: [202, 'u16'],
  BMS_maxDischargePower: [204, 'u16'],
  BMS_maxStationaryHeatPower: [206, 'u16'],
  BMS_hvacPowerBudget: [208, 'u16'],
  BMS_powerDissipation: [210, 'u16'],
  BMS_inletActiveCoolTargetT: [212, 'u16'],
  BMS_inletPassiveTargetT: [214, 'u16'],
  BMS_inletActiveHeatTargetT: [216, 'u16'],
  BMS_packTMin: [218, 'u16'],
  BMS_packTMax: [220, 'u16'],
  PCS_info_buildConfigId: [222, 'u16'],
  PCS_info_hardwareId: [224, 'u16'],
  PCS_info_componentId: [226, 'u16'],
  PCS_dcdcMaxOutputCurrentAllowed: [228, 'u16'],
  PCS_info_usageId: [230, 'u16'],
  PCS_info_subUsageId: [232, 'u16'],
  HVP_dcLinkVoltage: [234, 'u16'],
  HVP_packVoltage: [236, 'u16'],
  HVP_fcLinkVoltage: [238, 'u16'],
  HVP_packContVoltage: [240, 'u16'],
  HVP_packNegativeV: [242, 'u16'],
  HVP_packPositiveV: [244, 'u16'],
  HVP_pyroAnalog: [246, 'u16'],
  HVP_dcLinkNegativeV: [248, 'u16'],
  HVP_dcLinkPositiveV: [250, 'u16'],
  HVP_fcLinkNegativeV: [252, 'u16'],
  HVP_fcContCoilCurrent: [254, 'u16'],
  HVP_fcContVoltage: [256, 'u16'],
  HVP_hvilInVoltage: [258, 'u16'],
  HVP_hvilOutVoltage: [260, 'u16'],
  HVP_fcLinkPositiveV: [262, 'u16'],
  HVP_packContCoilCurrent: [264, 'u16'],
  HVP_battery12V: [266, 'u16'],
  HVP_shuntRefVoltageDbg: [268, 'u16'],
  HVP_shuntAuxCurrentDbg: [270, 'u16'],
  HVP_shuntBarTempDbg: [272, 'u16'],
  HVP_shuntAsicTempDbg: [274, 'u16'],
  HVP_info_buildConfigId: [276, 'u16'],
  HVP_info_hardwareId: [278, 'u16'],
  HVP_info_componentId: [280, 'u16'],
  HVP_info_usageId: [282, 'u16'],
  HVP_info_subUsageId: [284, 'u16'],
  hvil_status: [286, 'u8'],
  packContNegativeState: [287, 'u8'],
  packContPositiveState: [288, 'u8'],
  packContactorSetState: [289, 'u8'],
  battery_packCtrsRequestStatus: [290, 'u8'],
  BMS_info_pcbaId: [291, 'u8'],
  BMS_info_assemblyId: [292, 'u8'],
  BMS_info_platformType: [293, 'u8'],
  BMS_info_bootUdsProtoVersion: [294, 'u8'],
  battery_beginning_of_life: [295, 'u8'],
  battery_battTempPct: [296, 'u8'],
  battery_BrickVoltageMaxNum: [297, 'u8'],
  battery_BrickVoltageMinNum: [298, 'u8'],
  battery_BrickTempMaxNum: [299, 'u8'],
  battery_BrickTempMinNum: [300, 'u8'],
  battery_BrickModelTMax: [301, 'u8'],
  battery_BrickModelTMin: [302, 'u8'],
  BMS_flowRequest: [303, 'u8'],
  BMS_uiChargeStatus: [304, 'u8'],
  BMS_contactorState: [305, 'u8'],
  BMS_state: [306, 'u8'],
  BMS_hvState: [307, 'u8'],
  BMS_notEnoughPowerForHeatPump: [308, 'u8'],
  BMS_powerLimitState: [309, 'u8'],
  BMS_inverterTQF: [310, 'u8'],
  PCS_dcdcPrechargeStatus: [311, 'u8'],
  PCS_dcdc12VSupportStatus: [312, 'u8'],
  PCS_dcdcHvBusDischargeStatus: [313, 'u8'],
  PCS_dcdcMainState: [314, 'u8'],
  PCS_dcdcSubState: [315, 'u8'],
  PCS_dcdcPrechargeRtyCnt: [316, 'u8'],
  PCS_dcdc12VSupportRtyCnt: [317, 'u8'],
  PCS_dcdcDischargeRtyCnt: [318, 'u8'],
  PCS_dcdcPwmEnableLine: [319, 'u8'],
  PCS_dcdcSupportingFixedLvTarget: [320, 'u8'],
  PCS_dcdcPrechargeRestartCnt: [321, 'u8'],
  PCS_dcdcInitialPrechargeSubState: [322, 'u8'],
  PCS_info_pcbaId: [323, 'u8'],
  PCS_info_assemblyId: [324, 'u8'],
  PCS_info_platformType: [325, 'u8'],
  PCS_info_bootUdsProtoVersion: [326, 'u8'],
  HVP_info_platformType: [327, 'u8'],
  HVP_info_pcbaId: [328, 'u8'],
  HVP_info_assemblyId: [329, 'u8'],
  HVP_info_bootUdsProtoVersion: [330, 'u8'],
  HVP_shuntHwMia: [331, 'u8'],
  HVP_shuntAuxCurrentStatus: [332, 'u8'],
  HVP_shuntBarTempStatus: [333, 'u8'],
  HVP_shuntAsicTempStatus: [334, 'u8'],
  packCtrsClosingBlocked: [335, 'b'],
  pyroTestInProgress: [336, 'b'],
  battery_packCtrsOpenNowRequested: [337, 'b'],
  battery_packCtrsOpenRequested: [338, 'b'],
  battery_packCtrsResetRequestRequired: [339, 'b'],
  battery_dcLinkAllowedToEnergize: [340, 'b'],
  BMS352_mux: [341, 'b'],
  battery_full_charge_complete: [342, 'b'],
  battery_fully_charged: [343, 'b'],
  BMS_hvilFault: [344, 'b'],
  BMS_diLimpRequest: [345, 'b'],
  BMS_pcsPwmEnabled: [346, 'b'],
  BMS_pcsNoFlowRequest: [347, 'b'],
  BMS_noFlowRequest: [348, 'b'],
  PCS_dcdcFaulted: [349, 'b'],
  PCS_dcdcOutputIsLimited: [350, 'b'],
  HVP_gpioPassivePyroDepl: [351, 'b'],
  HVP_gpioPyroIsoEn: [352, 'b'],
  HVP_gpioCpFaultIn: [353, 'b'],
  HVP_gpioPackContPowerEn: [354, 'b'],
  HVP_gpioHvCablesOk: [355, 'b'],
  HVP_gpioHvpSelfEnable: [356, 'b'],
  HVP_gpioLed: [357, 'b'],
  HVP_gpioCrashSignal: [358, 'b'],
  HVP_gpioShuntDataReady: [359, 'b'],
  HVP_gpioFcContPosAux: [360, 'b'],
  HVP_gpioFcContNegAux: [361, 'b'],
  HVP_gpioBmsEout: [362, 'b'],
  HVP_gpioCpFaultOut: [363, 'b'],
  HVP_gpioPyroPor: [364, 'b'],
  HVP_gpioShuntEn: [365, 'b'],
  HVP_gpioHvpVerEn: [366, 'b'],
  HVP_gpioPackCoontPosFlywheel: [367, 'b'],
  HVP_gpioCpLatchEnable: [368, 'b'],
  HVP_gpioPcsEnable: [369, 'b'],
  HVP_gpioPcsDcdcPwmEnable: [370, 'b'],
  HVP_gpioPcsChargePwmEnable: [371, 'b'],
  HVP_gpioFcContPowerEnable: [372, 'b'],
  HVP_gpioHvilEnable: [373, 'b'],
  HVP_gpioSecDrdy: [374, 'b'],
  HVP_packCurrentMia: [375, 'b'],
  HVP_auxCurrentMia: [376, 'b'],
  HVP_currentSenseMia: [377, 'b'],
  HVP_shuntRefVoltageMismatch: [378, 'b'],
  HVP_shuntThermistorMia: [379, 'b'],
  BMS_partNumber: [380, 'u8', 12],
  battery_serialNumber: [392, 'u8', 15],
  battery_partNumber: [407, 'u8', 12],
  PCS_partNumber: [419, 'u8', 13],
  HVP_partNumber: [432, 'u8', 13],
};


export const DATALAYER_INFO_NISSAN_LEAF_FIELDS: ([string, string] | [string, string, number])[] = [
  ['CryptoChallenge', 'u32'],
  ['SolvedChallengeMSB', 'u32'],
  ['SolvedChallengeLSB', 'u32'],
  ['GIDS', 'u16'],
  ['ChargePowerLimit', 'u16'],
  ['battery_HX', 'u16'],
  ['Insulation', 'u16'],
  ['MaxPowerForCharger', 'i16'],
  ['temperature1', 'i16'],
  ['temperature2', 'i16'],
  ['temperature3', 'i16'],
  ['temperature4', 'i16'],
  ['LEAF_gen', 'u8'],
  ['RelayCutRequest', 'u8'],
  ['FailsafeStatus', 'u8'],
  ['Interlock', 'b'],
  ['Full', 'b'],
  ['Empty', 'b'],
  ['MainRelayOn', 'b'],
  ['HeatExist', 'b'],
  ['HeatingStop', 'b'],
  ['HeatingStart', 'b'],
  ['HeaterSendRequest', 'b'],
  ['UserRequestSOHreset', 'b'],
  ['challengeFailed', 'b'],
  ['BatterySerialNumber', 'u8', 15],
  ['BatteryPartNumber', 'u8', 7],
  ['BMSIDcode', 'u8', 8],
];

export const DATALAYER_INFO_NISSAN_LEAF: { [key: string]: [number, string] | [number, string, number] } = {
  CryptoChallenge: [0, 'u32'],
  SolvedChallengeMSB: [4, 'u32'],
  SolvedChallengeLSB: [8, 'u32'],
  GIDS: [12, 'u16'],
  ChargePowerLimit: [14, 'u16'],
  battery_HX: [16, 'u16'],
  Insulation: [18, 'u16'],
  MaxPowerForCharger: [20, 'i16'],
  temperature1: [22, 'i16'],
  temperature2: [24, 'i16'],
  temperature3: [26, 'i16'],
  temperature4: [28, 'i16'],
  LEAF_gen: [30, 'u8'],
  RelayCutRequest: [31, 'u8'],
  FailsafeStatus: [32, 'u8'],
  Interlock: [33, 'b'],
  Full: [34, 'b'],
  Empty: [35, 'b'],
  MainRelayOn: [36, 'b'],
  HeatExist: [37, 'b'],
  HeatingStop: [38, 'b'],
  HeatingStart: [39, 'b'],
  HeaterSendRequest: [40, 'b'],
  UserRequestSOHreset: [41, 'b'],
  challengeFailed: [42, 'b'],
  BatterySerialNumber: [43, 'u8', 15],
  BatteryPartNumber: [58, 'u8', 7],
  BMSIDcode: [65, 'u8', 8],
};


export const DATALAYER_INFO_MEB_FIELDS: ([string, string] | [string, string, number])[] = [
  ['isolation_resistance', 'u32'],
  ['BMS_voltage_intermediate_dV', 'i32'],
  ['BMS_voltage_dV', 'i32'],
  ['battery_temperature_dC', 'u16'],
  ['rt_overcurrent', 'u8'],
  ['rt_CAN_fault', 'u8'],
  ['rt_overcharge', 'u8'],
  ['rt_SOC_high', 'u8'],
  ['rt_SOC_low', 'u8'],
  ['rt_SOC_jumping', 'u8'],
  ['rt_temp_difference', 'u8'],
  ['rt_cell_overtemp', 'u8'],
  ['rt_cell_undertemp', 'u8'],
  ['rt_battery_overvolt', 'u8'],
  ['rt_battery_undervol', 'u8'],
  ['rt_cell_overvolt', 'u8'],
  ['rt_cell_undervol', 'u8'],
  ['rt_cell_imbalance', 'u8'],
  ['rt_battery_unathorized', 'u8'],
  ['HVIL', 'u8'],
  ['BMS_mode', 'u8'],
  ['battery_diagnostic', 'u8'],
  ['status_HV_line', 'u8'],
  ['warning_support', 'u8'],
  ['BMS_status_voltage_free', 'u8'],
  ['BMS_error_status', 'u8'],
  ['BMS_Kl30c_Status', 'u8'],
  ['balancing_active', 'u8'],
  ['BMS_welded_contactors_status', 'u8'],
  ['balancing_request', 'b'],
  ['charging_active', 'b'],
  ['BMS_OBD_MIL', 'b'],
  ['BMS_error_lamp_req', 'b'],
  ['BMS_warning_lamp_req', 'b'],
  ['BMS_fault_performance', 'b'],
  ['BMS_fault_emergency_shutdown_crash', 'b'],
  ['BMS_error_shutdown_request', 'b'],
  ['BMS_error_shutdown', 'b'],
  ['SDSW', 'b'],
  ['pilotline', 'b'],
  ['transportmode', 'b'],
  ['componentprotection', 'b'],
  ['shutdown_active', 'b'],
  ['battery_heating', 'b'],
  ['', ' ', 2],
  ['temp_points', 'f', 18],
  ['celltemperature_dC', 'u16', 56],
];

export const DATALAYER_INFO_MEB: { [key: string]: [number, string] | [number, string, number] } = {
  isolation_resistance: [0, 'u32'],
  BMS_voltage_intermediate_dV: [4, 'i32'],
  BMS_voltage_dV: [8, 'i32'],
  battery_temperature_dC: [12, 'u16'],
  rt_overcurrent: [14, 'u8'],
  rt_CAN_fault: [15, 'u8'],
  rt_overcharge: [16, 'u8'],
  rt_SOC_high: [17, 'u8'],
  rt_SOC_low: [18, 'u8'],
  rt_SOC_jumping: [19, 'u8'],
  rt_temp_difference: [20, 'u8'],
  rt_cell_overtemp: [21, 'u8'],
  rt_cell_undertemp: [22, 'u8'],
  rt_battery_overvolt: [23, 'u8'],
  rt_battery_undervol: [24, 'u8'],
  rt_cell_overvolt: [25, 'u8'],
  rt_cell_undervol: [26, 'u8'],
  rt_cell_imbalance: [27, 'u8'],
  rt_battery_unathorized: [28, 'u8'],
  HVIL: [29, 'u8'],
  BMS_mode: [30, 'u8'],
  battery_diagnostic: [31, 'u8'],
  status_HV_line: [32, 'u8'],
  warning_support: [33, 'u8'],
  BMS_status_voltage_free: [34, 'u8'],
  BMS_error_status: [35, 'u8'],
  BMS_Kl30c_Status: [36, 'u8'],
  balancing_active: [37, 'u8'],
  BMS_welded_contactors_status: [38, 'u8'],
  balancing_request: [39, 'b'],
  charging_active: [40, 'b'],
  BMS_OBD_MIL: [41, 'b'],
  BMS_error_lamp_req: [42, 'b'],
  BMS_warning_lamp_req: [43, 'b'],
  BMS_fault_performance: [44, 'b'],
  BMS_fault_emergency_shutdown_crash: [45, 'b'],
  BMS_error_shutdown_request: [46, 'b'],
  BMS_error_shutdown: [47, 'b'],
  SDSW: [48, 'b'],
  pilotline: [49, 'b'],
  transportmode: [50, 'b'],
  componentprotection: [51, 'b'],
  shutdown_active: [52, 'b'],
  battery_heating: [53, 'b'],
  temp_points: [56, 'f', 18],
  celltemperature_dC: [128, 'u16', 56],
};


export const DATALAYER_INFO_VOLVO_POLESTAR_FIELDS: ([string, string] | [string, string, number])[] = [
  ['soc_bms', 'u16'],
  ['soc_calc', 'u16'],
  ['soc_rescaled', 'u16'],
  ['soh_bms', 'u16'],
  ['BECMsupplyVoltage', 'u16'],
  ['BECMBatteryVoltage', 'u16'],
  ['BECMUDynMaxLim', 'u16'],
  ['BECMUDynMinLim', 'u16'],
  ['HvBattPwrLimDcha1', 'u16'],
  ['HvBattPwrLimDchaSoft', 'u16'],
  ['HvBattPwrLimDchaSlowAgi', 'u16'],
  ['HvBattPwrLimChrgSlowAgi', 'u16'],
  ['BECMBatteryCurrent', 'i16'],
  ['HVSysRlySts', 'u8'],
  ['HVSysDCRlySts1', 'u8'],
  ['HVSysDCRlySts2', 'u8'],
  ['HVSysIsoRMonrSts', 'u8'],
  ['DTCcount', 'u8'],
  ['HVILstatusBits', 'u8'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestDTCreadout', 'b'],
  ['UserRequestBECMecuReset', 'b'],
];

export const DATALAYER_INFO_VOLVO_POLESTAR: { [key: string]: [number, string] | [number, string, number] } = {
  soc_bms: [0, 'u16'],
  soc_calc: [2, 'u16'],
  soc_rescaled: [4, 'u16'],
  soh_bms: [6, 'u16'],
  BECMsupplyVoltage: [8, 'u16'],
  BECMBatteryVoltage: [10, 'u16'],
  BECMUDynMaxLim: [12, 'u16'],
  BECMUDynMinLim: [14, 'u16'],
  HvBattPwrLimDcha1: [16, 'u16'],
  HvBattPwrLimDchaSoft: [18, 'u16'],
  HvBattPwrLimDchaSlowAgi: [20, 'u16'],
  HvBattPwrLimChrgSlowAgi: [22, 'u16'],
  BECMBatteryCurrent: [24, 'i16'],
  HVSysRlySts: [26, 'u8'],
  HVSysDCRlySts1: [27, 'u8'],
  HVSysDCRlySts2: [28, 'u8'],
  HVSysIsoRMonrSts: [29, 'u8'],
  DTCcount: [30, 'u8'],
  HVILstatusBits: [31, 'u8'],
  UserRequestDTCreset: [32, 'b'],
  UserRequestDTCreadout: [33, 'b'],
  UserRequestBECMecuReset: [34, 'b'],
};


export const DATALAYER_INFO_VOLVO_HYBRID_FIELDS: ([string, string] | [string, string, number])[] = [
  ['soc_bms', 'u16'],
  ['soc_calc', 'u16'],
  ['soc_rescaled', 'u16'],
  ['soh_bms', 'u16'],
  ['BECMsupplyVoltage', 'u16'],
  ['BECMBatteryVoltage', 'u16'],
  ['BECMBatteryCurrent', 'u16'],
  ['BECMUDynMaxLim', 'u16'],
  ['BECMUDynMinLim', 'u16'],
  ['HvBattPwrLimDcha1', 'u16'],
  ['HvBattPwrLimDchaSoft', 'u16'],
  ['HVSysRlySts', 'u8'],
  ['HVSysDCRlySts1', 'u8'],
  ['HVSysDCRlySts2', 'u8'],
  ['HVSysIsoRMonrSts', 'u8'],
  ['UserRequestDTCreset', 'b'],
  ['UserRequestDTCreadout', 'b'],
  ['UserRequestBECMecuReset', 'b'],
];

export const DATALAYER_INFO_VOLVO_HYBRID: { [key: string]: [number, string] | [number, string, number] } = {
  soc_bms: [0, 'u16'],
  soc_calc: [2, 'u16'],
  soc_rescaled: [4, 'u16'],
  soh_bms: [6, 'u16'],
  BECMsupplyVoltage: [8, 'u16'],
  BECMBatteryVoltage: [10, 'u16'],
  BECMBatteryCurrent: [12, 'u16'],
  BECMUDynMaxLim: [14, 'u16'],
  BECMUDynMinLim: [16, 'u16'],
  HvBattPwrLimDcha1: [18, 'u16'],
  HvBattPwrLimDchaSoft: [20, 'u16'],
  HVSysRlySts: [22, 'u8'],
  HVSysDCRlySts1: [23, 'u8'],
  HVSysDCRlySts2: [24, 'u8'],
  HVSysIsoRMonrSts: [25, 'u8'],
  UserRequestDTCreset: [26, 'b'],
  UserRequestDTCreadout: [27, 'b'],
  UserRequestBECMecuReset: [28, 'b'],
};


export const DATALAYER_INFO_ZOE_FIELDS: ([string, string] | [string, string, number])[] = [
  ['mileage_km', 'u16'],
  ['alltime_kWh', 'u16'],
  ['CUV', 'u8'],
  ['HVBIR', 'u8'],
  ['HVBUV', 'u8'],
  ['EOCR', 'u8'],
  ['HVBOC', 'u8'],
  ['HVBOT', 'u8'],
  ['HVBOV', 'u8'],
  ['COV', 'u8'],
];

export const DATALAYER_INFO_ZOE: { [key: string]: [number, string] | [number, string, number] } = {
  mileage_km: [0, 'u16'],
  alltime_kWh: [2, 'u16'],
  CUV: [4, 'u8'],
  HVBIR: [5, 'u8'],
  HVBUV: [6, 'u8'],
  EOCR: [7, 'u8'],
  HVBOC: [8, 'u8'],
  HVBOT: [9, 'u8'],
  HVBOV: [10, 'u8'],
  COV: [11, 'u8'],
};


export const DATALAYER_INFO_ZOE_PH2_FIELDS: ([string, string] | [string, string, number])[] = [
  ['battery_soc', 'u16'],
  ['battery_usable_soc', 'u16'],
  ['battery_soh', 'u16'],
  ['battery_pack_voltage', 'u16'],
  ['battery_max_cell_voltage', 'u16'],
  ['battery_min_cell_voltage', 'u16'],
  ['battery_12v', 'u16'],
  ['battery_avg_temp', 'u16'],
  ['battery_min_temp', 'u16'],
  ['battery_max_temp', 'u16'],
  ['battery_max_power', 'u16'],
  ['battery_interlock', 'u16'],
  ['battery_kwh', 'u16'],
  ['battery_current', 'u16'],
  ['battery_current_offset', 'u16'],
  ['battery_max_generated', 'u16'],
  ['battery_max_available', 'u16'],
  ['battery_current_voltage', 'u16'],
  ['battery_charging_status', 'u16'],
  ['battery_remaining_charge', 'u16'],
  ['battery_balance_capacity_total', 'u16'],
  ['battery_balance_time_total', 'u16'],
  ['battery_balance_capacity_sleep', 'u16'],
  ['battery_balance_time_sleep', 'u16'],
  ['battery_balance_capacity_wake', 'u16'],
  ['battery_balance_time_wake', 'u16'],
  ['battery_bms_state', 'u16'],
  ['battery_energy_complete', 'u16'],
  ['battery_energy_partial', 'u16'],
  ['battery_slave_failures', 'u16'],
  ['battery_mileage', 'u16'],
  ['battery_fan_speed', 'u16'],
  ['battery_fan_period', 'u16'],
  ['battery_fan_control', 'u16'],
  ['battery_fan_duty', 'u16'],
  ['battery_temporisation', 'u16'],
  ['battery_time', 'u16'],
  ['battery_pack_time', 'u16'],
  ['battery_soc_min', 'u16'],
  ['battery_soc_max', 'u16'],
  ['UserRequestNVROLReset', 'b'],
];

export const DATALAYER_INFO_ZOE_PH2: { [key: string]: [number, string] | [number, string, number] } = {
  battery_soc: [0, 'u16'],
  battery_usable_soc: [2, 'u16'],
  battery_soh: [4, 'u16'],
  battery_pack_voltage: [6, 'u16'],
  battery_max_cell_voltage: [8, 'u16'],
  battery_min_cell_voltage: [10, 'u16'],
  battery_12v: [12, 'u16'],
  battery_avg_temp: [14, 'u16'],
  battery_min_temp: [16, 'u16'],
  battery_max_temp: [18, 'u16'],
  battery_max_power: [20, 'u16'],
  battery_interlock: [22, 'u16'],
  battery_kwh: [24, 'u16'],
  battery_current: [26, 'u16'],
  battery_current_offset: [28, 'u16'],
  battery_max_generated: [30, 'u16'],
  battery_max_available: [32, 'u16'],
  battery_current_voltage: [34, 'u16'],
  battery_charging_status: [36, 'u16'],
  battery_remaining_charge: [38, 'u16'],
  battery_balance_capacity_total: [40, 'u16'],
  battery_balance_time_total: [42, 'u16'],
  battery_balance_capacity_sleep: [44, 'u16'],
  battery_balance_time_sleep: [46, 'u16'],
  battery_balance_capacity_wake: [48, 'u16'],
  battery_balance_time_wake: [50, 'u16'],
  battery_bms_state: [52, 'u16'],
  battery_energy_complete: [54, 'u16'],
  battery_energy_partial: [56, 'u16'],
  battery_slave_failures: [58, 'u16'],
  battery_mileage: [60, 'u16'],
  battery_fan_speed: [62, 'u16'],
  battery_fan_period: [64, 'u16'],
  battery_fan_control: [66, 'u16'],
  battery_fan_duty: [68, 'u16'],
  battery_temporisation: [70, 'u16'],
  battery_time: [72, 'u16'],
  battery_pack_time: [74, 'u16'],
  battery_soc_min: [76, 'u16'],
  battery_soc_max: [78, 'u16'],
  UserRequestNVROLReset: [80, 'b'],
};


