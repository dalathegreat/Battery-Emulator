#ifndef CMFA_EV_BATTERY_H
#define CMFA_EV_BATTERY_H
#include "../include.h"

#define BATTERY_SELECTED
#define MAX_PACK_VOLTAGE_DV 3040  //5000 = 500.0V
#define MIN_PACK_VOLTAGE_DV 2185
#define MAX_CELL_DEVIATION_MV 100
#define MAX_CELL_VOLTAGE_MV 4250  //Battery is put into emergency stop if one cell goes over this value
#define MIN_CELL_VOLTAGE_MV 2700  //Battery is put into emergency stop if one cell goes below this value

// OBD2 PID polls. Some of these have been reverse engineered, but there are many unknown values still
#define PID_POLL_SOCZ 0x9001  //122 in log
#define PID_POLL_USOC 0x9002  //5531 (Possible SOC candidate)
#define PID_POLL_SOH_AVERAGE 0x9003
#define PID_POLL_AVERAGE_VOLTAGE_OF_CELLS 0x9006
#define PID_POLL_HIGHEST_CELL_VOLTAGE 0x9007
#define PID_POLL_CELL_NUMBER_HIGHEST_VOLTAGE 0x9008
#define PID_POLL_LOWEST_CELL_VOLTAGE 0x9009
#define PID_POLL_CELL_NUMBER_LOWEST_VOLTAGE 0x900A
#define PID_POLL_CURRENT_OFFSET 0x900C
#define PID_POLL_INSTANT_CURRENT 0x900D
#define PID_POLL_MAX_REGEN 0x900E
#define PID_POLL_MAX_DISCHARGE_POWER 0x900F
#define PID_POLL_12V_BATTERY 0x9011
#define PID_POLL_AVERAGE_TEMPERATURE 0x9012  //749 in log
#define PID_POLL_MIN_TEMPERATURE 0x9013      //736 in log
#define PID_POLL_MAX_TEMPERATURE 0x9014      //752 in log
#define PID_POLL_MAX_CHARGE_POWER 0x9018
#define PID_POLL_END_OF_CHARGE_FLAG 0x9019
#define PID_POLL_INTERLOCK_FLAG 0x901A
#define PID_POLL_BATTERY_IDENTIFICATION 0x901B  // Multi frame message
#define PID_POLL_CELL_1 0x9021
#define PID_POLL_CELL_2 0x9022
#define PID_POLL_CELL_3 0x9023
#define PID_POLL_CELL_4 0x9024
#define PID_POLL_CELL_5 0x9025
#define PID_POLL_CELL_6 0x9026
#define PID_POLL_CELL_7 0x9027
#define PID_POLL_CELL_8 0x9028
#define PID_POLL_CELL_9 0x9029
#define PID_POLL_CELL_10 0x902A
#define PID_POLL_CELL_11 0x902B
#define PID_POLL_CELL_12 0x902C
#define PID_POLL_CELL_13 0x902D
#define PID_POLL_CELL_14 0x902E
#define PID_POLL_CELL_15 0x902F
#define PID_POLL_CELL_16 0x9030
#define PID_POLL_CELL_17 0x9031
#define PID_POLL_CELL_18 0x9032
#define PID_POLL_CELL_19 0x9033
#define PID_POLL_CELL_20 0x9034
#define PID_POLL_CELL_21 0x9035
#define PID_POLL_CELL_22 0x9036
#define PID_POLL_CELL_23 0x9037
#define PID_POLL_CELL_24 0x9038
#define PID_POLL_CELL_25 0x9039
#define PID_POLL_CELL_26 0x903A
#define PID_POLL_CELL_27 0x903B
#define PID_POLL_CELL_28 0x903C
#define PID_POLL_CELL_29 0x903D
#define PID_POLL_CELL_30 0x903E
#define PID_POLL_CELL_31 0x903F
#define PID_POLL_DIDS_SUPPORTED_IN_RANGE_9041_9060 0x9040
#define PID_POLL_CELL_32 0x9041
#define PID_POLL_CELL_33 0x9042
#define PID_POLL_CELL_34 0x9043
#define PID_POLL_CELL_35 0x9044
#define PID_POLL_CELL_36 0x9045
#define PID_POLL_CELL_37 0x9046
#define PID_POLL_CELL_38 0x9047
#define PID_POLL_CELL_39 0x9048
#define PID_POLL_CELL_40 0x9049
#define PID_POLL_CELL_41 0x904A
#define PID_POLL_CELL_42 0x904B
#define PID_POLL_CELL_43 0x904C
#define PID_POLL_CELL_44 0x904D
#define PID_POLL_CELL_45 0x904E
#define PID_POLL_CELL_46 0x904F
#define PID_POLL_CELL_47 0x9050
#define PID_POLL_CELL_48 0x9051
#define PID_POLL_CELL_49 0x9052
#define PID_POLL_CELL_50 0x9053
#define PID_POLL_CELL_51 0x9054
#define PID_POLL_CELL_52 0x9055
#define PID_POLL_CELL_53 0x9056
#define PID_POLL_CELL_54 0x9057
#define PID_POLL_CELL_55 0x9058
#define PID_POLL_CELL_56 0x9059
#define PID_POLL_CELL_57 0x905A
#define PID_POLL_CELL_58 0x905B
#define PID_POLL_CELL_59 0x905C
#define PID_POLL_CELL_60 0x905D
#define PID_POLL_CELL_61 0x905E
#define PID_POLL_CELL_62 0x905F
#define PID_POLL_DIDS_SUPPORTED_IN_RANGE_9061_9080 0x9060
#define PID_POLL_CELL_63 0x9061
#define PID_POLL_CELL_64 0x9062
#define PID_POLL_CELL_65 0x9063
#define PID_POLL_CELL_66 0x9064
#define PID_POLL_CELL_67 0x9065
#define PID_POLL_CELL_68 0x9066
#define PID_POLL_CELL_69 0x9067
#define PID_POLL_CELL_70 0x9068
#define PID_POLL_CELL_71 0x9069
#define PID_POLL_CELL_72 0x906A
/*
#define PID_POLL_UNKNOWNX 0x912F // Multi frame message, empty
#define PID_POLL_UNKNOWNX 0x9129
#define PID_POLL_UNKNOWNX 0x9131
#define PID_POLL_UNKNOWNX 0x9132
#define PID_POLL_UNKNOWNX 0x9133
#define PID_POLL_UNKNOWNX 0x9134
#define PID_POLL_UNKNOWNX 0x9135
#define PID_POLL_UNKNOWNX 0x9136
#define PID_POLL_UNKNOWNX 0x9137
#define PID_POLL_UNKNOWNX 0x9138
#define PID_POLL_UNKNOWNX 0x9139
#define PID_POLL_UNKNOWNX 0x913A
#define PID_POLL_UNKNOWNX 0x913B
#define PID_POLL_UNKNOWNX 0x913C
#define PID_POLL_UNKNOWN5 0x912F
#define PID_POLL_UNKNOWNX 0x91B7
*/
#define PID_POLL_SOH_AVAILABLE_POWER_CALCULATION 0x91BC  // 0-100%
#define PID_POLL_SOH_GENERATED_POWER_CALCULATION 0x91BD  // 0-100%
/*
#define PID_POLL_UNKNOWNX 0x91C1
#define PID_POLL_UNKNOWNX 0x91CD
#define PID_POLL_UNKNOWNX 0x91CF
#define PID_POLL_UNKNOWNX 0x91F6
#define PID_POLL_UNKNOWNX 0x91F7
#define PID_POLL_UNKNOWNX 0x920F
#define PID_POLL_UNKNOWNx 0x9242
*/
#define PID_POLL_CUMULATIVE_ENERGY_WHEN_CHARGING 0x9243
#define PID_POLL_CUMULATIVE_ENERGY_WHEN_DISCHARGING 0x9245
#define PID_POLL_CUMULATIVE_ENERGY_IN_REGEN 0x9247
/*
#define PID_POLL_UNKNOWNx 0x9256
#define PID_POLL_UNKNOWNx 0x9261
#define PID_POLL_UNKNOWN7 0x9284
#define PID_POLL_UNKNOWNx 0xF012
#define PID_POLL_UNKNOWNx 0xF1A0
#define PID_POLL_UNKNOWNx 0xF182
#define PID_POLL_UNKNOWNx 0xF187
#define PID_POLL_UNKNOWNx 0xF188
#define PID_POLL_UNKNOWNx 0xF18A
#define PID_POLL_UNKNOWNx 0xF18C
#define PID_POLL_UNKNOWNx 0xF191
#define PID_POLL_UNKNOWNx 0xF194
#define PID_POLL_UNKNOWNx 0xF195
*/

void setup_battery(void);
void transmit_can_frame(CAN_frame* tx_frame, int interface);

#endif
